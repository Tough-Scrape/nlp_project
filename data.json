[{"repo": "django/django", "language": "Python", "readme_contents": "======\nDjango\n======\n\nDjango is a high-level Python Web framework that encourages rapid development\nand clean, pragmatic design. Thanks for checking it out.\n\nAll documentation is in the \"``docs``\" directory and online at\nhttps://docs.djangoproject.com/en/stable/. If you're just getting started,\nhere's how we recommend you read the docs:\n\n* First, read ``docs/intro/install.txt`` for instructions on installing Django.\n\n* Next, work through the tutorials in order (``docs/intro/tutorial01.txt``,\n  ``docs/intro/tutorial02.txt``, etc.).\n\n* If you want to set up an actual deployment server, read\n  ``docs/howto/deployment/index.txt`` for instructions.\n\n* You'll probably want to read through the topical guides (in ``docs/topics``)\n  next; from there you can jump to the HOWTOs (in ``docs/howto``) for specific\n  problems, and check out the reference (``docs/ref``) for gory details.\n\n* See ``docs/README`` for instructions on building an HTML version of the docs.\n\nDocs are updated rigorously. If you find any problems in the docs, or think\nthey should be clarified in any way, please take 30 seconds to fill out a\nticket here: https://code.djangoproject.com/newticket\n\nTo get more help:\n\n* Join the ``#django`` channel on irc.freenode.net. Lots of helpful people hang\n  out there. See https://en.wikipedia.org/wiki/Wikipedia:IRC/Tutorial if you're\n  new to IRC.\n\n* Join the django-users mailing list, or read the archives, at\n  https://groups.google.com/group/django-users.\n\nTo contribute to Django:\n\n* Check out https://docs.djangoproject.com/en/dev/internals/contributing/ for\n  information about getting involved.\n\nTo run Django's test suite:\n\n* Follow the instructions in the \"Unit tests\" section of\n  ``docs/internals/contributing/writing-code/unit-tests.txt``, published online at\n  https://docs.djangoproject.com/en/dev/internals/contributing/writing-code/unit-tests/#running-the-unit-tests\n"}, {"repo": "MisterBooo/LeetCodeAnimation", "language": "Java", "readme_contents": "![LeetCode Animation All in One](https://upload-images.jianshu.io/upload_images/1940317-e837182a805cecce.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n[![Travis](https://img.shields.io/badge/language-C++-red.svg)](https://developer.apple.com/)\n[![Travis](https://img.shields.io/badge/language-Java-yellow.svg)](https://developer.apple.com/)\n\n[\u8fd9\u91cc\u6709\u4e2d\u6587\u7248\u672c\u7684README\uff0c\u70b9\u51fb\u5b83\uff01](https://github.com/MisterBooo/LeetCodeAnimation/blob/master/Readme.md)\n\nI will do my best to demonstrate all the questions on LeetCode in the form of animation. \n\nI plan to take three to four years to complete it!\n\nI look forward to witnessing this day with you!\n\nThe latest article published in WeChat **\u4e94\u5206\u949f\u5b66\u7b97\u6cd5** ,  you can pay attention to get the latest article.\n\n\n\n## Problems\n\n\n| ID | Problem  | Article | Animation | Date|\n| --- | ---  | :--- |:--- | :--- |\n| 000 |Ten Classic Sorting Algorithms | [\u5341\u5927\u7ecf\u5178\u6392\u5e8f\u7b97\u6cd5\u52a8\u753b\u4e0e\u89e3\u6790\uff0c\u770b\u6211\u5c31\u591f\u4e86\uff01\uff08\u914d\u4ee3\u7801\u5b8c\u5168\u7248\uff09](https://mp.weixin.qq.com/s/vn3KiV-ez79FmbZ36SX9lg) | ![\u5f52\u5e76\u6392\u5e8f.gif](https://upload-images.jianshu.io/upload_images/1940317-92f62b62af03e233.gif?imageMogr2/auto-orient/strip)|\n| 001 |Two-Sum | [\u6bcf\u5929\u4e00\u7b97\uff1aTwo Sum](https://mp.weixin.qq.com/s?__biz=MzUyNjQxNjYyMg==&mid=2247483740&idx=1&sn=1950545589ea9b86ee65fbb6be1f4290&chksm=fa0e6eddcd79e7cb542b7d4dc1304eead516994315fa4f52b575230f0f022c9e0a88ede3714e&scene=21#wechat_redirect) |![](https://bucket-1257126549.cos.ap-guangzhou.myqcloud.com/20181206161033.gif) | \n| 002 |Add Two Numbers| [\u56fe\u89e3LeetCode\u7b2c 2 \u53f7\u95ee\u9898\uff1a\u4e24\u4e2a\u6570\u5b57\u76f8\u52a0](https://mp.weixin.qq.com/s?__biz=MzUyNjQxNjYyMg==&mid=2247484231&idx=2&sn=6a9eb4fd0619c822e4dede69b8d841c8&chksm=fa0e6cc6cd79e5d0c03fffcd65b665fed62db9dca9c97771898f388ea292ce806bfd6eb908b5&token=934487935&lang=zh_CN#rd) |![](https://bucket-1257126549.cos.ap-guangzhou.myqcloud.com/20181210092831.gif)| \n| 003 |Longest Substring Without Repeating Characters| [\u56fe\u89e3LeetCode\u7b2c 3 \u53f7\u95ee\u9898\uff1a\u65e0\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u4e32](https://mp.weixin.qq.com/s?__biz=MzUyNjQxNjYyMg==&mid=2247484265&idx=2&sn=7f72afb341865923315bd51e1f50beff&chksm=fa0e6ce8cd79e5fe4be925fd5f01f59f59010c6c965fb3daefac79992593a6e58990c212e0bb&token=1412967663&lang=zh_CN#rd)|![](https://bucket-1257126549.cos.ap-guangzhou.myqcloud.com/20181210092855.gif)| \n| 019| Remove-Nth-Node-From-End-of-List |[\u6bcf\u5929\u4e00\u7b97\uff1aRemove Nth Node From End of List](http://mp.weixin.qq.com/s?__biz=MzUyNjQxNjYyMg==&mid=2247483821&idx=1&sn=11ecccab76cd53163e9dedb75effeb93&chksm=fa0e6e2ccd79e73ae9137c0d91b3533df4ea4ead4ad081834b8d91ff364c0d55c350ddcfa6c4&scene=21#wechat_redirect)  |![](https://bucket-1257126549.cos.ap-guangzhou.myqcloud.com/20181206161058.gif)| \n| 020|Valid-Parentheses  | [\u6bcf\u5929\u4e00\u7b97\uff1aValid Parentheses](http://mp.weixin.qq.com/s?__biz=MzUyNjQxNjYyMg==&mid=2247483824&idx=1&sn=ab9362e125dc5e2b3ef1611cad9448c2&chksm=fa0e6e31cd79e727c6e1e0e3c467e193edb6ae841a41e5dc8eef39d0bf3141cc53f63b019cba&scene=21#wechat_redirect) |![](https://bucket-1257126549.cos.ap-guangzhou.myqcloud.com/20181206161106.gif)| \n| 024| Swap-Nodes-in-Pairs | [\u6bcf\u5929\u4e00\u7b97\uff1aSwap Nodes in Pairs](http://mp.weixin.qq.com/s?__biz=MzUyNjQxNjYyMg==&mid=2247483773&idx=1&sn=db6cf272df968cd6571eb0bb50ecc721&chksm=fa0e6efccd79e7ea26810d335e6ece9ac23b8e3ac31be00dbd534018737ccb3ef9a00f22aff3&scene=21#wechat_redirect) |![](https://bucket-1257126549.cos.ap-guangzhou.myqcloud.com/20181206161115.gif)| \n| 026|  Remove-Duplicates-from-Sorted-Array| [\u56fe\u89e3LeetCode\u7b2c 26 \u53f7\u95ee\u9898\uff1a\u5220\u9664\u6392\u5e8f\u6570\u7ec4\u4e2d\u7684\u91cd\u590d\u9879](https://mp.weixin.qq.com/s?__biz=MzUyNjQxNjYyMg==&mid=2247484284&idx=2&sn=c8af62a82a62a21217d0f0b2b5891e4f&chksm=fa0e6cfdcd79e5ebe8726a61f93b834467d29b7d9e60a44feb990388f9e98605ac1e3f7e723d&token=762342620&lang=zh_CN#rd)  |![](https://bucket-1257126549.cos.ap-guangzhou.myqcloud.com/20181206161124.gif)| \n| 075|  Sort-Colors| [\u6bcf\u5929\u4e00\u7b97\uff1aSort Colors](http://mp.weixin.qq.com/s?__biz=MzUyNjQxNjYyMg==&mid=2247483706&idx=1&sn=905f43c882a91b55fd169d812620f277&chksm=fa0e6ebbcd79e7ad8857b0dad9ad14dbaf17fe557ef56ba600cec26b2bb668df2e171431d74c&scene=21#wechat_redirect) |![](https://bucket-1257126549.cos.ap-guangzhou.myqcloud.com/20181206161136.gif)| \n| 086|  Partition-List| \t[\u6bcf\u5929\u4e00\u7b97\uff1aPartition List](http://mp.weixin.qq.com/s?__biz=MzUyNjQxNjYyMg==&mid=2247483781&idx=1&sn=f31548ebbb2cf9ba56d979d3e51ddde2&chksm=fa0e6e04cd79e712d6cc7ff8e8b7631b7300ac0fa1a3e4c4e3b836de7a01fb5d0d6428a18bc4&scene=21#wechat_redirect) |![](https://bucket-1257126549.cos.ap-guangzhou.myqcloud.com/20181206161147.gif)| \n|092 |Reverse-Linked-List-II | [\u6bcf\u5929\u4e00\u7b97\uff1aReverse Linked List II](http://mp.weixin.qq.com/s?__biz=MzUyNjQxNjYyMg==&mid=2247483820&idx=1&sn=113e87b55c8ac8e22e9db00673798118&chksm=fa0e6e2dcd79e73b5835a262599b935783de3317a453bc0ed8df9fa5d1532785a085ea663e59&scene=21#wechat_redirect) |![](https://bucket-1257126549.cos.ap-guangzhou.myqcloud.com/20181206161156.gif)| \n| 094|Binary-Tree-Inorder-Traversal  | [\u6bcf\u5929\u4e00\u7b97\uff1aBinary Tree Inorder Traversal ](http://mp.weixin.qq.com/s?__biz=MzUyNjQxNjYyMg==&mid=2247483853&idx=1&sn=94cd4b4ee8dc2268290a72334c6af57b&chksm=fa0e6e4ccd79e75a41a6b78397b80cdfccda332823874475b516f997f89e786488599fc5cc1e&scene=21#wechat_redirect)|![](https://bucket-1257126549.cos.ap-guangzhou.myqcloud.com/20181206161208.gif)| \n|102\t|Binary-Tree-Level-Order-Traversal|\t[\u6bcf\u5929\u4e00\u7b97\uff1aBinary Tree Level Order Traveral](http://mp.weixin.qq.com/s?__biz=MzUyNjQxNjYyMg==&mid=2247483868&idx=1&sn=d50041789fcd13a75a2296f620b69d71&chksm=fa0e6e5dcd79e74b0030ac5129f10ec4ba87c98da63c5904affe9f06e06ecf28695c410d3ec7&scene=21#wechat_redirect)|![](https://bucket-1257126549.cos.ap-guangzhou.myqcloud.com/20181206161232.gif)| \n|103\t|Binary Tree Zigzag Level Order Traversal|\t\t[\u56fe\u89e3LeetCode\u7b2c 103 \u53f7\u95ee\u9898\uff1a\u4e8c\u53c9\u6811\u7684\u952f\u9f7f\u5f62\u5c42\u6b21\u904d\u5386](https://mp.weixin.qq.com/s?__biz=MzUyNjQxNjYyMg==&mid=2247484290&idx=2&sn=c29c4eefcbe8954cca6b3c8491ebccf1&chksm=fa0e6c03cd79e515581905322a3a22a3f3d10d24ca668a9d5aaef00932f0237eeaeaf3199668&token=1840661183&lang=zh_CN#rd)|![](https://bucket-1257126549.cos.ap-guangzhou.myqcloud.com/20181210092922.gif)| \n|107\t| Binary Tree Level Order Traversal II |\t\u6bcf\u5929\u4e00\u7b97\uff1a Binary Tree Level Order Traversal II|![](https://bucket-1257126549.cos.ap-guangzhou.myqcloud.com/20181210092949.gif)| \n|136\t| Single Number |\t[\u4e00\u9053\u8ba9\u4f60\u62cd\u6848\u53eb\u7edd\u7684\u7b97\u6cd5\u9898 ](https://mp.weixin.qq.com/s?__biz=MzUyNjQxNjYyMg==&mid=2247484505&idx=1&sn=4c1c056dd4852c3b4b1ead51c90a9b2d&chksm=fa0e6bd8cd79e2ce8188dcdd8843a5d071248906bfb8971c62d513dbd69b816acc191a78e4b2&token=487128715&lang=zh_CN#rd)|![](https://bucket-1257126549.cos.ap-guangzhou.myqcloud.com/20190116110804.gif)| 2019-01-16 |\n|144 |  Binary-Tree-Preorder-Traversal|  [\u6bcf\u5929\u4e00\u7b97\uff1aBinary Tree Preorder Traversal](http://mp.weixin.qq.com/s?__biz=MzUyNjQxNjYyMg==&mid=2247483843&idx=1&sn=994bf0d42dd9941a879a3a3ed500a4d6&chksm=fa0e6e42cd79e75472404eb5da7ee98f20d303efe230eb4f41efec57164630f555e7111e62ff&scene=21#wechat_redirect)|![](https://bucket-1257126549.cos.ap-guangzhou.myqcloud.com/20181207112441.gif)| \n| 145| Binary-Tree-Postorder-Traversal |  [\u6bcf\u5929\u4e00\u7b97\uff1aBinary Tree Postorder Traversal](http://mp.weixin.qq.com/s?__biz=MzUyNjQxNjYyMg==&mid=2247483853&idx=1&sn=94cd4b4ee8dc2268290a72334c6af57b&chksm=fa0e6e4ccd79e75a41a6b78397b80cdfccda332823874475b516f997f89e786488599fc5cc1e&scene=21#wechat_redirect)|![](https://bucket-1257126549.cos.ap-guangzhou.myqcloud.com/20181219084940.gif)| \n| 146| LRU Cache |  LRU\u7f13\u5b58\u673a\u5236 |![](https://bucket-1257126549.cos.ap-guangzhou.myqcloud.com/20190125143756.gif)| 2019-01-25 Made by Jun chen|\n| 150| Evaluate-Reverse-Polish-Notation | [\u6bcf\u5929\u4e00\u7b97\uff1aEvaluate Reverse Polish Notation](http://mp.weixin.qq.com/s?__biz=MzUyNjQxNjYyMg==&mid=2247483834&idx=1&sn=27cbff99f10dfcdb56cb37c237d7f2bb&chksm=fa0e6e3bcd79e72dc430bf81aed9dde9bd01634239dcf7820d6befa881efd323d9d58d76d90d&scene=21#wechat_redirect) |![](https://bucket-1257126549.cos.ap-guangzhou.myqcloud.com/20181206161304.gif)| \n| 167| Two-Sum-II-Input-array-is-sorted | [\u6bcf\u5929\u4e00\u7b97\uff1aTwo Sum II ](http://mp.weixin.qq.com/s?__biz=MzUyNjQxNjYyMg==&mid=2247483711&idx=1&sn=3afec74e9e9effa71dc0b22659e14b44&chksm=fa0e6ebecd79e7a84db7861c9b5dbccdc98aa9d9a6994dda49a37edeb729e8242ea6af8f20ad&scene=21#wechat_redirect)|![](https://bucket-1257126549.cos.ap-guangzhou.myqcloud.com/20181206161314.gif)| \n|199 |  Binary Tree Right Side View | \u6bcf\u5929\u4e00\u7b97\uff1aBinary Tree Right Side View |![](https://bucket-1257126549.cos.ap-guangzhou.myqcloud.com/20181206161328.gif)| \n| 203| Remove-Linked-List-Elements |  [\u6bcf\u5929\u4e00\u7b97\uff1aRemove Linked List Elements](http://mp.weixin.qq.com/s?__biz=MzUyNjQxNjYyMg==&mid=2247483766&idx=1&sn=6721376a65680bf7cf9064cf7b1ae4ae&chksm=fa0e6ef7cd79e7e1665e60fe6ea3f2087bca518c1573bc4c4b9425573f98401bafc59542dca0&scene=21#wechat_redirect)|![](https://bucket-1257126549.cos.ap-guangzhou.myqcloud.com/20181206161338.gif)| \n|206\t| Reverse Linked List |\t[\u6bcf\u5929\u4e00\u7b97\uff1a Reverse Linked List ](http://mp.weixin.qq.com/s?__biz=MzUyNjQxNjYyMg==&mid=2247483799&idx=1&sn=c2212c8963809e8d3392abeeb851dbfc&chksm=fa0e6e16cd79e7003c2d30b1a2bb4f23dc56df38e3efedd0ab2cfae291609280a832eabe67de&scene=21#wechat_redirect)|![](https://bucket-1257126549.cos.ap-guangzhou.myqcloud.com/20181210093009.gif)| \n|209\t| Minimum Size Subarray Sum  |\t\u6bcf\u5929\u4e00\u7b97\uff1a Minimum Size Subarray Sum |![](https://bucket-1257126549.cos.ap-guangzhou.myqcloud.com/20181210093031.gif)| \n| 219|Contains-Duplicate-II  |[\u6bcf\u5929\u4e00\u7b97\uff1aContains Duplicate II  ](http://mp.weixin.qq.com/s?__biz=MzUyNjQxNjYyMg==&mid=2247483755&idx=1&sn=2501b6ca09c43eaa9fba71a9bd1f5253&chksm=fa0e6eeacd79e7fc192c0a23cf90d98fe6f2c35f9e4f2d0f937ccba45a58cf23a0a9c49d35d5&scene=21#wechat_redirect)|![](https://bucket-1257126549.cos.ap-guangzhou.myqcloud.com/20181206161352.gif)| \n|237|\tDelete-Node-in-a-Linked-List\t|\u6bcf\u5929\u4e00\u7b97\uff1aDelete Node in a Linked List|![](https://bucket-1257126549.cos.ap-guangzhou.myqcloud.com/20181206161400.gif) |\n|279|\tPerfect Squares\t|[\u56fe\u89e3LeetCode\u7b2c 279 \u53f7\u95ee\u9898\uff1a \u5b8c\u5168\u5e73\u65b9\u6570](https://mp.weixin.qq.com/s/53AlHe29fJF1hEwj0cj7ZA)|![](https://bucket-1257126549.cos.ap-guangzhou.myqcloud.com/20190119213317.gif) |  Made by \u738b\u741b 2019-01-19\u65e5|\n|283\t|Move-Zeroes\t|[\u6bcf\u5929\u4e00\u7b97\uff1aMove Zeros](http://mp.weixin.qq.com/s?__biz=MzUyNjQxNjYyMg==&mid=2247483700&idx=1&sn=465f778d60e8560742feab5844d7cac5&chksm=fa0e6eb5cd79e7a357899d378edb532b498cd63e3ce9113f8ac74d397ce4b214ca5aa8198b7d&scene=21#wechat_redirect)|![](https://bucket-1257126549.cos.ap-guangzhou.myqcloud.com/20181206161421.gif)| \n|328 |Odd-Even-Linked-List  | [\u6bcf\u5929\u4e00\u7b97\uff1aOdd Even Linked List](http://mp.weixin.qq.com/s?__biz=MzUyNjQxNjYyMg==&mid=2247483786&idx=1&sn=f7810950b34675e1c4420361faf5e361&chksm=fa0e6e0bcd79e71d2c6fc6a4a68b6ef7a17abc3dc9897548f8e44b51e9494f52c4cebbc4176e&scene=21#wechat_redirect) |![](https://diycode.b0.upaiyun.com/photo/2018/94e5c38540029690c93314b3d697caaf.gif)| \n|344 | Reverse-String |\u6bcf\u5929\u4e00\u7b97\uff1aReverse String  |![](https://bucket-1257126549.cos.ap-guangzhou.myqcloud.com/20181211110918.gif)| \n|349 |  Intersection-of-Two-Arrays| [\u6bcf\u5929\u4e00\u7b97\uff1aIntersection of Two Arrays ](http://mp.weixin.qq.com/s?__biz=MzUyNjQxNjYyMg==&mid=2247483726&idx=1&sn=a887f6b983058d97c183dd300832ecbb&chksm=fa0e6ecfcd79e7d985587b543622c85aadc83a4d7a074135e1356fb4a0ebfd07e7af13467906&scene=21#wechat_redirect)|![](https://bucket-1257126549.cos.ap-guangzhou.myqcloud.com/20181206161441.gif)| \n| 350|  Intersection-of-Two-Arrays-II| [\u6bcf\u5929\u4e00\u7b97\uff1aIntersection of Two Arrays II ](http://mp.weixin.qq.com/s?__biz=MzUyNjQxNjYyMg==&mid=2247483733&idx=1&sn=946bd6de3251437dd77b43ecab056c82&chksm=fa0e6ed4cd79e7c2a439b5f1853bf5154a3438ed282c7ba5e94948780c426a1f1492c0b201c4&scene=21#wechat_redirect)|![](https://bucket-1257126549.cos.ap-guangzhou.myqcloud.com/20181206161729.gif)| \n|445|\tAdd Two Numbers II\t|[\u56fe\u89e3LeetCode\u7b2c 445 \u53f7\u95ee\u9898\uff1a  \u4e24\u6570\u76f8\u52a0 II](https://mp.weixin.qq.com/s/z8_1dK7mw9gxfhhSZUBVgg)|![](https://bucket-1257126549.cos.ap-guangzhou.myqcloud.com/20190119213714.gif) |  Made by \u738b\u741b 2019-01-19\u65e5|\n|447 | Number-of-Boomerangs |  [\u6bcf\u65e5\u4e00\u7b97\uff1aNumber of Boomerangs](http://mp.weixin.qq.com/s?__biz=MzUyNjQxNjYyMg==&mid=2247483747&idx=1&sn=7774eee0b252b311257134f6a52c4e2d&chksm=fa0e6ee2cd79e7f44858c46c3d04859ced9073dbb9de95ce7ee0bcc131e613862ddfd9a6f158&scene=21#wechat_redirect)|![](https://bucket-1257126549.cos.ap-guangzhou.myqcloud.com/20181206161738.gif)|\n|454 |4Sum-II  |  \u6bcf\u65e5\u4e00\u7b97\uff1a4Sum II|![](https://bucket-1257126549.cos.ap-guangzhou.myqcloud.com/20181206161751.gif)| \n|642 |Design Search Autocomplete System   |  [\u56fe\u89e3 LeetCode \u7b2c 642 \u53f7\u95ee\u9898\uff1a\u641c\u7d22\u81ea\u52a8\u5b8c\u6210\u7cfb\u7edf](https://mp.weixin.qq.com/s?__biz=MzUyNjQxNjYyMg==&mid=2247484491&idx=1&sn=b329d90370d183b5a58bbf03f6a436ae&chksm=fa0e6bcacd79e2dc05bb5eaabd888561b82c37700b511e4971aa76ec42a630c0a35ef3e4721b&token=397665543&lang=zh_CN#rd)|Made by Jun [Click here](https://mp.weixin.qq.com/s?__biz=MzUyNjQxNjYyMg==&mid=2247484491&idx=1&sn=b329d90370d183b5a58bbf03f6a436ae&chksm=fa0e6bcacd79e2dc05bb5eaabd888561b82c37700b511e4971aa76ec42a630c0a35ef3e4721b&token=397665543&lang=zh_CN#rd)| \n\nIf the link of the article cannot be clicked, it means that the article has not been published. Please look forward to it :)\n\n## Code source \nThis warehouse code unless otherwise specified, all from this warehouse \n\n[Play-Leetcode](https://github.com/liuyubobobo/Play-Leetcode)\n\n\n## Supplement\n\nThe warehouse is kept up to date.\n\n\n2018-12-29 explain\uff1a\n\n[\u300a2019\u5e74LeetCodeAnimationd\u7684\u66f4\u65b0\u8ba1\u5212\u300b](https://mp.weixin.qq.com/s?__biz=MzUyNjQxNjYyMg==&mid=2247484375&idx=1&sn=5a5482d9863342650d8b43bb59171f7c&chksm=fa0e6c56cd79e540115e52500b80c8e72001c87ddceb7c0ae1de166fd283d632b960cde41aca&token=578760218&lang=zh_CN#rd)\n\n2018-12-07 explain:\n\nIn order to better perform LeetCode animation, i am working hard to learn more data structures and algorithms.\n\nI am currently writing an article \u300a\u52a8\u753b\u56fe\u89e3\u6570\u636e\u7ed3\u6784\u300b, and will continue to update this warehouse after finishing the series of articles on animation graphic data structure.\n\nE-mail\uff1amisterbigbooo@gmail.com\n\nlike it! star\u2764\ufe0f it!\n"}, {"repo": "shadowsocks/shadowsocks-windows", "language": "C#", "readme_contents": "<img src=\"shadowsocks-csharp/Resources/ssw128.png\" alt=\"[logo]\" width=\"48\"/> Shadowsocks for Windows\r\n=======================\r\n\r\n[![Build Status]][Appveyor]\r\n\r\n[\u4e2d\u6587\u8bf4\u660e]\r\n\r\n#### Features\r\n\r\n1. System proxy configuration\r\n2. PAC mode and global mode\r\n3. [GFWList] and user rules\r\n4. Supports HTTP proxy\r\n5. Supports server auto switching\r\n6. Supports UDP relay (see Usage)\r\n7. Supports plugins\r\n\r\n#### Download\r\n\r\nDownload the latest release from [release page].\r\n\r\n#### Requirements\r\n\r\nMicrosoft [.NET Framework 4.7.2] or higher, Microsoft [Visual C++ 2015 Redistributable] (x86) .\r\n\r\n#### Basic\r\n\r\n1. Find Shadowsocks icon in the notification tray\r\n2. You can add multiple servers in servers menu\r\n3. Select `Enable System Proxy` menu to enable system proxy. Please disable other\r\nproxy addons in your browser, or set them to use system proxy\r\n4. You can also configure your browser proxy manually if you don't want to enable\r\nsystem proxy. Set Socks5 or HTTP proxy to 127.0.0.1:1080. You can change this\r\nport in `Servers -> Edit Servers`\r\n\r\n#### PAC\r\n\r\n1. You can change PAC rules by editing the PAC file. When you save the PAC file\r\nwith any editor, Shadowsocks will notify browsers about the change automatically\r\n2. You can also update PAC file from [GFWList] \\(maintained by 3rd party)\r\n3. You can also use online PAC URL\r\n\r\nFor Windows10 Store and related applications, please execute the following command under Admin privilege:\r\n```\r\nnetsh winhttp import proxy source=ie\r\n```\r\n\r\n#### Server Auto Switching\r\n\r\n1. Load balance: choosing server randomly\r\n2. High availability: choosing the best server (low latency and packet loss)\r\n3. Choose By Total Package Loss: ping and choose. Please also enable\r\n   `Availability Statistics` in the menu if you want to use this\r\n4. Write your own strategy by implement IStrategy interface and send us a pull request!\r\n\r\n#### UDP\r\n\r\nFor UDP, you need to use SocksCap or ProxyCap to force programs you want\r\nto be proxied to tunnel over Shadowsocks\r\n\r\n#### Multiple Instances\r\n\r\nIf you want to manage multiple servers using other tools like SwitchyOmega,\r\nyou can start multiple Shadowsocks instances. To avoid configuration conflicts,\r\ncopy Shadowsocks to a new directory and choose a different local port.\r\n\r\n#### Plugins\r\n\r\nIf you would like to connect to server via a plugin, please set the plugin's\r\npath (relative or absolute) on Edit Servers form.\r\n_Note_: Forward Proxy will not be used while a plugin is enabled.\r\n\r\nDetails:\r\n[Working with non SIP003 standard Plugin].\r\n\r\n#### Global hotkeys\r\n\r\nHotkeys could be registered automatically on startup.\r\nIf you are using multiple instances of Shadowsocks,\r\nyou must set different key combination for each instance.\r\n\r\n##### How to input?\r\n\r\n1. Put focus in the corresponding textbox.\r\n2. Press the key combination that you want to use.\r\n3. Release all keys when you think it is ready.\r\n4. Your input appears in the textbox.\r\n\r\n##### How to change?\r\n\r\n1. Put focus in the corresponding textbox.\r\n2. Press BackSpace key to clear content.\r\n3. Re-input new key combination.\r\n\r\n##### How to deactivate?\r\n\r\n1. Clear content in the textbox that you want to deactivate,\r\nif you want to deactivate all, please clear all textboxes.\r\n2. Press OK button to confirm.\r\n\r\n##### Meaning of label color\r\n\r\n- Green: This key combination is not occupied by other programs and register successfully.\r\n- Yellow: This key combination is occupied by other programs and you have to change to another one.\r\n- Transparent without color: The initial status.\r\n\r\n#### Server Configuration\r\n\r\nPlease visit [Servers] for more information.\r\n\r\n#### Experimental\r\n\r\n[Experimental Features]\r\n\r\n#### Development\r\n\r\n1. [Visual Studio 2017] & [.NET Framework 4.7.2 Developer Pack] are required.\r\n2. It is recommended to share your idea on the Issue Board before you start to work,\r\nespecially for feature development.\r\n\r\n#### License\r\n\r\n[GPLv3]\r\n\r\n#### Open Source Components / Libraries\r\n\r\n```\r\nCaseless.Fody (MIT)    https://github.com/Fody/Caseless\r\nCostura.Fody (MIT)     https://github.com/Fody/Costura\r\nFody (MIT)             https://github.com/Fody/Fody\r\nGlobalHotKey (GPLv3)   https://github.com/kirmir/GlobalHotKey\r\nNewtonsoft.Json (MIT)  https://www.newtonsoft.com/json\r\nStringEx.CS ()         https://github.com/LazyMode/StringEx\r\nZXing.Net (Apache 2.0) https://github.com/micjahn/ZXing.Net\r\n\r\nlibsscrypto (GPLv2)    https://github.com/shadowsocks/libsscrypto\r\nPrivoxy (GPLv2)        https://www.privoxy.org\r\nSysproxy ()            https://github.com/Noisyfox/sysproxy\r\n```\r\n\r\n\r\n\r\n[Appveyor]:     https://ci.appveyor.com/project/celeron533/shadowsocks-windows\r\n[Build Status]: https://ci.appveyor.com/api/projects/status/tfw57q6eecippsl5/branch/master?svg=true\r\n[release page]: https://github.com/shadowsocks/shadowsocks-csharp/releases\r\n[GFWList]:      https://github.com/gfwlist/gfwlist\r\n[Servers]:      https://github.com/shadowsocks/shadowsocks/wiki/Ports-and-Clients#linux--server-side\r\n[\u4e2d\u6587\u8bf4\u660e]:     https://github.com/shadowsocks/shadowsocks-windows/wiki/Shadowsocks-Windows-%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E\r\n[Visual Studio 2017]:   https://www.visualstudio.com/downloads/\r\n[.NET Framework 4.7.2]: https://dotnet.microsoft.com/download/dotnet-framework/net472\r\n[.NET Framework 4.7.2 Developer Pack]: https://dotnet.microsoft.com/download/dotnet-framework/net472\r\n[Visual C++ 2015 Redistributable]:     https://www.microsoft.com/en-us/download/details.aspx?id=53840\r\n[GPLv3]:        https://github.com/shadowsocks/shadowsocks-windows/blob/master/LICENSE.txt\r\n[Working with non SIP003 standard Plugin]: https://github.com/shadowsocks/shadowsocks-windows/wiki/Working-with-non-SIP003-standard-Plugin\r\n[Experimental Features]: https://github.com/shadowsocks/shadowsocks-windows/wiki/Experimental"}, {"repo": "chrislgarry/Apollo-11", "language": "Assembly", "readme_contents": "<div dir=\"RTL\">\n\n# \u0623\u0628\u0648\u0644\u0648 11\n[![NASA][1]][2]\n\n:crossed_flags:\n[Bahasa Indonesia][ID],\n[Catal\u00e0][CA],\n[Deutsch][DE],\n[English][EN],\n[Espa\u00f1ol][ES],\n[Fran\u00e7ais][FR],\n[Italiano][IT],\n[Polski][PL],\n[Portugu\u00eas][PT_BR],\n[\u0420\u0443\u0441\u0441\u043a\u0438\u0439][RU],\n[T\u00fcrk\u00e7e][TR],\n[Rom\u00e2n\u0103][RO],\n**\u0627\u0644\u0639\u0631\u0628\u064a\u0629**,\n[\u0939\u093f\u0902\u0926\u0940][HI_IN],\n[\u6b63\u9ad4\u4e2d\u6587][ZH_TW],\n[\u7b80\u4f53\u4e2d\u6587][ZH_CN],\n[\ud55c\uad6d\uc5b4][KO_KR]\n\n[AR]:README.ar.md\n[ID]:README.id.md\n[CA]:README.ca.md\n[DE]:README.de.md\n[EN]:README.md\n[ES]:README.es.md\n[IT]:README.it.md\n[PL]:README.pl.md\n[FR]:README.fr.md\n[PT_BR]:README.pt_br.md\n[TR]:README.tr.md\n[ZH_TW]:README.zh_tw.md\n[ZH_CN]:README.zh_cn.md\n[KO_KR]:README.ko_kr.md\n[HI_IN]:README.hi_in.md\n[RU]:README.ru.md\n[RO]:README.ro.md\n\n\u0627\u0644\u0643\u0648\u062f \u0627\u0644\u0645\u0635\u062f\u0631\u064a \u0627\u0644\u0623\u0635\u0644\u064a \u0644\u062d\u0627\u0633\u0648\u0628 \u0627\u0644\u0627\u0631\u0634\u0627\u062f \u0644\u0623\u0628\u0648\u0644\u0648 11 (AGC) \u0644\u0644\u0645\u0631\u0643\u0628\u0629 \u0627\u0644\u0642\u064a\u0627\u062f\u064a\u0629 (Comanche055) \u0648\u0627\u0644\u0645\u0631\u0643\u0628\u0629 \u0627\u0644\u0642\u0645\u0631\u064a\u0629 (Luminary099). \u062a\u0645 \u062a\u0631\u0642\u064a\u0645\u0647 \u0645\u0646 \u0642\u0628\u0644 [AGC \u0627\u0644\u0627\u0641\u062a\u0631\u0627\u0636\u064a\u0629][3] \u0648[\u0645\u062a\u062d\u0641 MIT][4]. \u0627\u0644\u0647\u062f\u0641 \u0623\u0646 \u062a\u0643\u0648\u0646 \u0645\u0633\u062a\u0648\u062f\u0639 \u0644\u0644\u0643\u0648\u062f \u0627\u0644\u0645\u0635\u062f\u0631\u064a \u0627\u0644\u0623\u0635\u0644\u064a \u0644\u0623\u0628\u0648\u0644\u0648 11 (AGC). \u0644\u0647\u0630\u0627 \u0641\u0625\u0646 \u0637\u0644\u0628\u0627\u062a \u0627\u0644\u0633\u062d\u0628 \u0645\u0631\u062d\u0628 \u0628\u0647\u0627 \u0644\u0623\u064a \u0627\u062e\u062a\u0644\u0627\u0641 \u064a\u062a\u0645 \u0631\u0635\u062f\u0647 \u0628\u064a\u0646 \u0627\u0644\u0646\u0633\u062e \u0641\u064a \u0647\u0630\u0627 \u0627\u0644\u0645\u0633\u062a\u0648\u062f\u0639 \u0648\u0627\u0644\u0645\u0633\u062d \u0627\u0644\u0623\u0635\u0644\u064a \u0644[Luminary 099][5] \u0648[Comanche 055][6]\u060c \u0623\u0648 \u0623\u064a \u0645\u0644\u0641 \u0642\u062f \u0641\u0627\u062a\u0646\u064a.\n\n## \u0627\u0644\u0645\u0633\u0627\u0647\u0645\u0629\n\u0631\u062c\u0627\u0621\u064b \u0631\u0627\u062c\u0639 [CONTRIBUTING.ar.md][7] \u0642\u0628\u0644 \u0641\u062a\u062d \u0637\u0644\u0628 \u0633\u062d\u0628.\n\n## \u0627\u0644\u062a\u062c\u0645\u064a\u0639\n\u0625\u0630\u0627 \u0643\u0646\u062a \u0645\u0647\u062a\u0645\u0627\u064b \u0628\u062a\u062c\u0645\u064a\u0639 \u0627\u0644\u0643\u0648\u062f \u0627\u0644\u0645\u0635\u062f\u0631\u064a \u0627\u0644\u0623\u0635\u0644\u064a\u060c \u0631\u0627\u062c\u0639 [AGC \u0627\u0644\u0627\u0641\u062a\u0631\u0627\u0636\u064a\u0629][8].\n\n## \u0627\u0644\u0627\u0633\u0646\u0627\u062f\n\n&nbsp;         | &nbsp;\n-------------: | -----:\n\u062d\u0642\u0648\u0642 \u0627\u0644\u0646\u0634\u0631      | \u0627\u0644\u0645\u062c\u0627\u0644 \u0627\u0644\u0639\u0627\u0645\nComanche055    | \u062c\u0632\u0621 \u0645\u0646 \u0627\u0644\u0643\u0648\u062f \u0627\u0644\u0645\u0635\u062f\u0631\u064a \u0644Colossus 2A\u060c \u062d\u0627\u0633\u0648\u0628 \u0627\u0631\u0634\u0627\u062f \u0623\u0628\u0648\u0644\u0648 (AGC) \u0644\u0644\u0645\u0631\u0643\u0628\u0629 \u0627\u0644\u0642\u064a\u0627\u062f\u064a\u0629 (CM) \u0644\u0623\u0628\u0648\u0644\u0648 11<br>`Assemble revision 055 of AGC program Comanche by NASA`<br>`2021113-051. 10:28 APR. 1, 1969`\nLuminary099    | \u062c\u0632\u0621 \u0645\u0646 \u0627\u0644\u0643\u0648\u062f \u0627\u0644\u0645\u0635\u062f\u0631\u064a \u0644Luminary 1A\u060c \u062d\u0627\u0633\u0648\u0628 \u0627\u0631\u0634\u0627\u062f \u0623\u0628\u0648\u0644\u0648 (AGC) \u0644\u0644\u0645\u0631\u0643\u0628\u0629 \u0627\u0644\u0642\u0645\u0631\u064a\u0629 (LM) \u0644\u0623\u0628\u0648\u0644\u0648 11<br>`Assemble revision 001 of AGC program LYM99 by NASA`<br>`2021112-061. 16:27 JUL. 14, 1969`\n\u0627\u0644\u0645\u064f\u0631\u0643\u0650\u0628      | yaYUL\n\u0644\u0644\u062a\u0648\u0627\u0635\u0644        | \u0631\u0648\u0646 \u0628\u0631\u0643\u064a <info@sandroid.org>\n\u0627\u0644\u0645\u0648\u0642\u0639 \u0627\u0644\u0627\u0644\u0643\u062a\u0631\u0648\u0646\u064a        | www.ibiblio.org/apollo\n\u0627\u0644\u062a\u0631\u0642\u064a\u0645 | \u062a\u0645 \u0646\u0633\u062e \u0627\u0644\u0643\u0648\u062f \u0627\u0644\u0645\u0635\u062f\u0631\u064a \u0647\u0630\u0627 \u0623\u0648 \u062a\u0643\u064a\u064a\u0641\u0647 \u0628\u0637\u0631\u064a\u0642\u0629 \u0623\u062e\u0631\u0649 \u0645\u0646 \u0635\u0648\u0631 \u0645\u0631\u0642\u0645\u0629 \u0644\u0646\u0633\u062e\u0629 \u0645\u0637\u0628\u0648\u0639\u0629 \u0645\u0646 \u0645\u062a\u062d\u0641 MIT. \u062a\u0645 \u0627\u0644\u062a\u0631\u0642\u064a\u0645 \u0628\u0648\u0627\u0633\u0637\u0629 \u0628\u0648\u0644 \u0641\u064a\u0644\u062f \u060c \u0648\u0631\u062a\u0628\u062a\u0647\u0627 \u062f\u064a\u0628\u0648\u0631\u0627 \u062f\u0648\u063a\u0644\u0627\u0633 \u0645\u0646 \u0627\u0644\u0645\u062a\u062d\u0641. \u0634\u0643\u0631\u0627\u064b \u062c\u0632\u064a\u0644\u0627\u064b \u0644\u0643\u0644\u064a\u0647\u0645\u0627.\n\n### \u0627\u0644\u0639\u0642\u062f \u0648\u0627\u0644\u0645\u0648\u0627\u0641\u0642\u0627\u062a\n*\u0645\u0633\u062a\u0645\u062f\u0629 \u0645\u0646 [CONTRACT_AND_APPROVALS.agc]*\n\n\u0633\u064a\u0634\u0627\u0631 \u0644\u0628\u0631\u0646\u0627\u0645\u062c \u0627\u0644AGC \u0647\u0630\u0627 \u0628Colossus 2A.\n\n\u0647\u0630\u0627 \u0627\u0644\u0628\u0631\u0646\u0627\u0645\u062c \u0645\u062e\u0635\u0635 \u0644\u0644\u0627\u0633\u062a\u062e\u062f\u0627\u0645 \u0641\u064a \u0627\u0644\u0645\u0631\u0643\u0628\u0629 \u0627\u0644\u0642\u064a\u0627\u062f\u064a\u0629 \u0643\u0645\u0627 \u0647\u0648 \u0645\u062d\u062f\u062f \u0641\u064a \u0627\u0644\u062a\u0642\u0631\u064a\u0631 `R-577`. \u062a\u0645 \u0625\u0639\u062f\u0627\u062f \u0647\u0630\u0627 \u0627\u0644\u0628\u0631\u0646\u0627\u0645\u062c \u0641\u064a \u0625\u0637\u0627\u0631 \u0645\u0634\u0631\u0648\u0639 DSR `55-23870` \u060c \u0628\u0631\u0639\u0627\u064a\u0629 \u0645\u0631\u0643\u0632 \u0627\u0644\u0645\u0631\u0643\u0628\u0627\u062a \u0627\u0644\u0641\u0636\u0627\u0626\u064a\u0629 \u0627\u0644\u0645\u0623\u0647\u0648\u0644 \u0627\u0644\u062a\u0627\u0628\u0639 \u0644\u0644\u0625\u062f\u0627\u0631\u0629 \u0627\u0644\u0648\u0637\u0646\u064a\u0629 \u0644\u0644\u0645\u0644\u0627\u062d\u0629 \u0627\u0644\u062c\u0648\u064a\u0629 \u0648\u0627\u0644\u0641\u0636\u0627\u0621 \u0645\u0646 \u062e\u0644\u0627\u0644 \u0639\u0642\u062f `NAS 9-4065` \u0645\u0639 \u0645\u062e\u062a\u0628\u0631 \u0627\u0644\u0623\u062c\u0647\u0632\u0629  \u0645\u0646 \u0645\u0639\u0647\u062f \u0645\u0627\u0633\u0627\u062a\u0634\u0648\u0633\u062a\u0633 \u0644\u0644\u062a\u0643\u0646\u0648\u0644\u0648\u062c\u064a\u0627\u060c \u0643\u0627\u0645\u0628\u0631\u064a\u062f\u062c\u060c \u0645\u0627\u0633\u0627\u062a\u0634\u0648\u0633\u062a\u0633.\n\n\u0642\u062f\u0645\u062a\u0647          | \u0627\u0644\u0648\u0638\u064a\u0641\u0629 | \u0627\u0644\u062a\u0627\u0631\u064a\u062e\n--------------------: | ---: | ---:\n\u0645\u0627\u0631\u063a\u0631\u064a\u062a \u0647. \u0647\u0627\u0645\u0644\u062a\u0648\u0646  | \u0642\u0627\u0626\u062f\u0629 \u0628\u0631\u0645\u062c\u0629 Colussus<br>\u0628\u0631\u0646\u0627\u0645\u062c \u0623\u0628\u0648\u0644\u0648 \u0644\u0644\u0625\u0631\u0634\u0627\u062f \u0648\u0627\u0644\u062a\u0646\u0642\u0644 | 28 \u0622\u0630\u0627\u0631 1969\n\n\u0648\u0627\u0641\u0642 \u0639\u0644\u064a\u0647        | \u0627\u0644\u0648\u0638\u064a\u0641\u0629 | \u0627\u0644\u062a\u0627\u0631\u064a\u062e\n-----------------: | ---: | ---:\n\u062f\u0627\u0646\u064a\u0627\u0644 \u062c. \u0644\u064a\u0643\u0644\u064a   | \u0645\u062f\u064a\u0631 \u062a\u0637\u0648\u064a\u0631 \u0628\u0631\u0646\u0627\u0645\u062c \u0627\u0644\u0645\u0647\u0645\u0627\u062a<br>\u0628\u0631\u0646\u0627\u0645\u062c \u0623\u0628\u0648\u0644\u0648 \u0644\u0644\u0625\u0631\u0634\u0627\u062f \u0648\u0627\u0644\u062a\u0646\u0642\u0644 | 28 \u0622\u0630\u0627\u0631 1969\n\u0641\u0631\u064a\u062f \u0647. \u0645\u0627\u0631\u062a\u0646    | \u0645\u062f\u064a\u0631 \u0645\u0634\u0631\u0648\u0639 Colussus<br>\u0628\u0631\u0646\u0627\u0645\u062c \u0623\u0628\u0648\u0644\u0648 \u0644\u0644\u0625\u0631\u0634\u0627\u062f \u0648\u0627\u0644\u062a\u0646\u0642\u0644 | 28 \u0622\u0630\u0627\u0631 1969\n\u0646\u0648\u0631\u0645\u0627\u0646 \u0625\u064a. \u0633\u064a\u0631\u0632    | \u0645\u062f\u064a\u0631 \u062a\u0637\u0648\u064a\u0631 \u0627\u0644\u0645\u0647\u0645\u0627\u062a<br>\u0628\u0631\u0646\u0627\u0645\u062c \u0623\u0628\u0648\u0644\u0648 \u0644\u0644\u0625\u0631\u0634\u0627\u062f \u0648\u0627\u0644\u062a\u0646\u0642\u0644 | 28 \u0622\u0630\u0627\u0631 1969\n\u0631\u064a\u062a\u0634\u0627\u0631\u062f \u0647. \u0628\u0627\u062a\u0646  | \u0645\u062f\u064a\u0631 \u062a\u0637\u0648\u064a\u0631 \u0627\u0644\u0645\u0647\u0645\u0627\u062a<br>\u0628\u0631\u0646\u0627\u0645\u062c \u0623\u0628\u0648\u0644\u0648 \u0644\u0644\u0625\u0631\u0634\u0627\u062f \u0648\u0627\u0644\u062a\u0646\u0642\u0644 | 28 \u0622\u0630\u0627\u0631 1969\n\u062f\u064a\u0641\u064a\u062f \u062c. \u0647\u0648\u062c      | \u0627\u0644\u0645\u062f\u064a\u0631<br>\u0628\u0631\u0646\u0627\u0645\u062c \u0623\u0628\u0648\u0644\u0648 \u0644\u0644\u0625\u0631\u0634\u0627\u062f \u0648\u0627\u0644\u062a\u0646\u0642\u0644 | 28 \u0622\u0630\u0627\u0631 1969\n\u0631\u0627\u0644\u0641 \u0631. \u0631\u0627\u062c\u0627\u0646    | \u0646\u0627\u0626\u0628 \u0627\u0644\u0645\u062f\u064a\u0631<br>\u0645\u062e\u062a\u0628\u0631 \u0627\u0644\u0623\u062c\u0647\u0632\u0629 | 28 \u0622\u0630\u0627\u0631 1969\n\n[CONTRACT_AND_APPROVALS.agc]:https://github.com/chrislgarry/Apollo-11/blob/master/Comanche055/CONTRACT_AND_APPROVALS.agc\n[1]:https://rawcdn.githack.com/aleen42/badges/c9246f74/src/nasa.svg\n[2]:https://www.nasa.gov/mission_pages/apollo/missions/apollo11.html\n[3]:http://www.ibiblio.org/apollo/\n[4]:http://web.mit.edu/museum/\n[5]:http://www.ibiblio.org/apollo/ScansForConversion/Luminary099/\n[6]:http://www.ibiblio.org/apollo/ScansForConversion/Comanche055/\n[7]:https://github.com/chrislgarry/Apollo-11/blob/master/CONTRIBUTING.ar.md\n[8]:https://github.com/rburkey2005/virtualagc\n\n</div>\n"}, {"repo": "jakubroztocil/httpie", "language": "Python", "readme_contents": "HTTPie: a CLI, cURL-like tool for humans\n########################################\n\nHTTPie (pronounced *aitch-tee-tee-pie*) is a command line HTTP client.\nIts goal is to make CLI interaction with web services as human-friendly\nas possible. It provides a simple ``http`` command that allows for sending\narbitrary HTTP requests using a simple and natural syntax, and displays\ncolorized output. HTTPie can be used for testing, debugging, and\ngenerally interacting with HTTP servers.\n\n\n.. class:: no-web no-pdf\n\n    |pypi| |build| |coverage| |downloads| |gitter|\n\n\n.. class:: no-web no-pdf\n\n    .. image:: https://raw.githubusercontent.com/jakubroztocil/httpie/master/httpie.gif\n        :alt: HTTPie in action\n        :width: 100%\n        :align: center\n\n\n.. contents::\n\n.. section-numbering::\n\n\n\nMain features\n=============\n\n\n* Expressive and intuitive syntax\n* Formatted and colorized terminal output\n* Built-in JSON support\n* Forms and file uploads\n* HTTPS, proxies, and authentication\n* Arbitrary request data\n* Custom headers\n* Persistent sessions\n* Wget-like downloads\n* Linux, macOS and Windows support\n* Plugins\n* Documentation\n* Test coverage\n\n\n.. class:: no-web\n\n    .. image:: https://raw.githubusercontent.com/jakubroztocil/httpie/master/httpie.png\n        :alt: HTTPie compared to cURL\n        :width: 100%\n        :align: center\n\n\nInstallation\n============\n\n\nmacOS\n-----\n\n\nOn macOS, HTTPie can be installed via `Homebrew <https://brew.sh/>`_\n(recommended):\n\n.. code-block:: bash\n\n    $ brew install httpie\n\n\nA MacPorts *port* is also available:\n\n.. code-block:: bash\n\n    $ port install httpie\n\nLinux\n-----\n\nMost Linux distributions provide a package that can be installed using the\nsystem package manager, for example:\n\n.. code-block:: bash\n\n    # Debian, Ubuntu, etc.\n    $ apt-get install httpie\n\n.. code-block:: bash\n\n    # Fedora\n    $ dnf install httpie\n\n.. code-block:: bash\n\n    # CentOS, RHEL, ...\n    $ yum install httpie\n\n.. code-block:: bash\n\n    # Arch Linux\n    $ pacman -S httpie\n\n\nWindows, etc.\n-------------\n\nA universal installation method (that works on Windows, Mac OS X, Linux, \u2026,\nand always provides the latest version) is to use `pip`_:\n\n\n.. code-block:: bash\n\n    # Make sure we have an up-to-date version of pip and setuptools:\n    $ pip install --upgrade pip setuptools\n\n    $ pip install --upgrade httpie\n\n\n(If ``pip`` installation fails for some reason, you can try\n``easy_install httpie`` as a fallback.)\n\n\nPython version\n--------------\n\nStarting with version 2.0.0 (currently under development) Python 3.6+ is required.\n\n\nUnstable version\n----------------\n\nYou can also install the latest unreleased development version directly from\nthe ``master`` branch on GitHub.  It is a work-in-progress of a future stable\nrelease so the experience might be not as smooth.\n\n\n.. class:: no-pdf\n\n|build|\n\n\nOn macOS you can install it with Homebrew:\n\n.. code-block:: bash\n\n    $ brew install httpie --HEAD\n\n\nOtherwise with ``pip``:\n\n.. code-block:: bash\n\n    $ pip install --upgrade https://github.com/jakubroztocil/httpie/archive/master.tar.gz\n\n\nVerify that now we have the\n`current development version identifier <https://github.com/jakubroztocil/httpie/blob/0af6ae1be444588bbc4747124e073423151178a0/httpie/__init__.py#L5>`_\nwith the ``-dev`` suffix, for example:\n\n.. code-block:: bash\n\n    $ http --version\n    1.0.0-dev\n\n\nUsage\n=====\n\n\nHello World:\n\n\n.. code-block:: bash\n\n    $ http httpie.org\n\n\nSynopsis:\n\n.. code-block:: bash\n\n    $ http [flags] [METHOD] URL [ITEM [ITEM]]\n\n\nSee also ``http --help``.\n\n\nExamples\n--------\n\nCustom `HTTP method`_, `HTTP headers`_ and `JSON`_ data:\n\n.. code-block:: bash\n\n    $ http PUT example.org X-API-Token:123 name=John\n\n\nSubmitting `forms`_:\n\n.. code-block:: bash\n\n    $ http -f POST example.org hello=World\n\n\nSee the request that is being sent using one of the `output options`_:\n\n.. code-block:: bash\n\n    $ http -v example.org\n\n\nUse `Github API`_ to post a comment on an\n`issue <https://github.com/jakubroztocil/httpie/issues/83>`_\nwith `authentication`_:\n\n.. code-block:: bash\n\n    $ http -a USERNAME POST https://api.github.com/repos/jakubroztocil/httpie/issues/83/comments body='HTTPie is awesome! :heart:'\n\n\nUpload a file using `redirected input`_:\n\n.. code-block:: bash\n\n    $ http example.org < file.json\n\n\nDownload a file and save it via `redirected output`_:\n\n.. code-block:: bash\n\n    $ http example.org/file > file\n\n\nDownload a file ``wget`` style:\n\n.. code-block:: bash\n\n    $ http --download example.org/file\n\nUse named `sessions`_ to make certain aspects or the communication persistent\nbetween requests to the same host:\n\n.. code-block:: bash\n\n    $ http --session=logged-in -a username:password httpbin.org/get API-Key:123\n\n    $ http --session=logged-in httpbin.org/headers\n\n\nSet a custom ``Host`` header to work around missing DNS records:\n\n.. code-block:: bash\n\n    $ http localhost:8000 Host:example.com\n\n..\n\n\nHTTP method\n===========\n\nThe name of the HTTP method comes right before the URL argument:\n\n.. code-block:: bash\n\n    $ http DELETE example.org/todos/7\n\n\nWhich looks similar to the actual ``Request-Line`` that is sent:\n\n.. code-block:: http\n\n    DELETE /todos/7 HTTP/1.1\n\n\nWhen the ``METHOD`` argument is omitted from the command, HTTPie defaults to\neither ``GET`` (with no request data) or ``POST`` (with request data).\n\n\nRequest URL\n===========\n\nThe only information HTTPie needs to perform a request is a URL.\nThe default scheme is, somewhat unsurprisingly, ``http://``,\nand can be omitted from the argument \u2013 ``http example.org`` works just fine.\n\n\nQuerystring parameters\n----------------------\n\nIf you find yourself manually constructing URLs with querystring parameters\non the terminal, you may appreciate the ``param==value`` syntax for appending\nURL parameters.\n\nWith that, you don't have to worry about escaping the ``&``\nseparators for your shell. Additionally, any special characters in the\nparameter name or value get automatically URL-escaped\n(as opposed to parameters specified in the full URL, which HTTPie doesn\u2019t\nmodify).\n\n.. code-block:: bash\n\n    $ http https://api.github.com/search/repositories q==httpie per_page==1\n\n\n.. code-block:: http\n\n    GET /search/repositories?q=httpie&per_page=1 HTTP/1.1\n\n\n\nURL shortcuts for ``localhost``\n-------------------------------\n\nAdditionally, curl-like shorthand for localhost is supported.\nThis means that, for example ``:3000`` would expand to ``http://localhost:3000``\nIf the port is omitted, then port 80 is assumed.\n\n.. code-block:: bash\n\n    $ http :/foo\n\n\n.. code-block:: http\n\n    GET /foo HTTP/1.1\n    Host: localhost\n\n\n.. code-block:: bash\n\n    $ http :3000/bar\n\n\n.. code-block:: http\n\n    GET /bar HTTP/1.1\n    Host: localhost:3000\n\n\n.. code-block:: bash\n\n    $ http :\n\n\n.. code-block:: http\n\n    GET / HTTP/1.1\n    Host: localhost\n\n\nOther default schemes\n---------------------\n\nWhen HTTPie is invoked as ``https`` then the default scheme is ``https://``\n(``$ https example.org`` will make a request to ``https://example.org``).\n\nYou can also use the ``--default-scheme <URL_SCHEME>`` option to create\nshortcuts for other protocols than HTTP (possibly supported via plugins).\nExample for the `httpie-unixsocket <https://github.com/httpie/httpie-unixsocket>`_ plugin:\n\n.. code-block:: bash\n\n    # Before\n    $ http http+unix://%2Fvar%2Frun%2Fdocker.sock/info\n\n\n.. code-block:: bash\n\n    # Create an alias\n    $ alias http-unix='http --default-scheme=\"http+unix\"'\n\n\n.. code-block:: bash\n\n    # Now the scheme can be omitted\n    $ http-unix %2Fvar%2Frun%2Fdocker.sock/info\n\nRequest items\n=============\n\nThere are a few different *request item* types that provide a\nconvenient mechanism for specifying HTTP headers, simple JSON and\nform data, files, and URL parameters.\n\nThey are key/value pairs specified after the URL. All have in\ncommon that they become part of the actual request that is sent and that\ntheir type is distinguished only by the separator used:\n``:``, ``=``, ``:=``, ``==``, ``@``, ``=@``, and ``:=@``. The ones with an\n``@`` expect a file path as value.\n\n+-----------------------+-----------------------------------------------------+\n| Item Type             | Description                                         |\n+=======================+=====================================================+\n| HTTP Headers          | Arbitrary HTTP header, e.g. ``X-API-Token:123``.    |\n| ``Name:Value``        |                                                     |\n+-----------------------+-----------------------------------------------------+\n| URL parameters        | Appends the given name/value pair as a query        |\n| ``name==value``       | string parameter to the URL.                        |\n|                       | The ``==`` separator is used.                       |\n+-----------------------+-----------------------------------------------------+\n| Data Fields           | Request data fields to be serialized as a JSON      |\n| ``field=value``,      | object (default), or to be form-encoded             |\n| ``field=@file.txt``   | (``--form, -f``).                                   |\n+-----------------------+-----------------------------------------------------+\n| Raw JSON fields       | Useful when sending JSON and one or                 |\n| ``field:=json``,      | more fields need to be a ``Boolean``, ``Number``,   |\n| ``field:=@file.json`` | nested ``Object``, or an ``Array``,  e.g.,          |\n|                       | ``meals:='[\"ham\",\"spam\"]'`` or ``pies:=[1,2,3]``    |\n|                       | (note the quotes).                                  |\n+-----------------------+-----------------------------------------------------+\n| Form File Fields      | Only available with ``--form, -f``.                 |\n| ``field@/dir/file``   | For example ``screenshot@~/Pictures/img.png``.      |\n|                       | The presence of a file field results                |\n|                       | in a ``multipart/form-data`` request.               |\n+-----------------------+-----------------------------------------------------+\n\n\nNote that data fields aren't the only way to specify request data:\n`Redirected input`_ is a mechanism for passing arbitrary request data.\n\n\nEscaping rules\n--------------\n\nYou can use ``\\`` to escape characters that shouldn't be used as separators\n(or parts thereof). For instance, ``foo\\==bar`` will become a data key/value\npair (``foo=`` and ``bar``) instead of a URL parameter.\n\nOften it is necessary to quote the values, e.g. ``foo='bar baz'``.\n\nIf any of the field names or headers starts with a minus\n(e.g., ``-fieldname``), you need to place all such items after the special\ntoken ``--`` to prevent confusion with ``--arguments``:\n\n.. code-block:: bash\n\n    $ http httpbin.org/post  --  -name-starting-with-dash=foo -Unusual-Header:bar\n\n.. code-block:: http\n\n    POST /post HTTP/1.1\n    -Unusual-Header: bar\n    Content-Type: application/json\n\n    {\n        \"-name-starting-with-dash\": \"foo\"\n    }\n\n\n\nJSON\n====\n\nJSON is the *lingua franca* of modern web services and it is also the\n**implicit content type** HTTPie uses by default.\n\n\nSimple example:\n\n.. code-block:: bash\n\n    $ http PUT example.org name=John email=john@example.org\n\n.. code-block:: http\n\n    PUT / HTTP/1.1\n    Accept: application/json, */*\n    Accept-Encoding: gzip, deflate\n    Content-Type: application/json\n    Host: example.org\n\n    {\n        \"name\": \"John\",\n        \"email\": \"john@example.org\"\n    }\n\n\nDefault behaviour\n-----------------\n\n\nIf your command includes some data `request items`_, they are serialized as a JSON\nobject by default. HTTPie also automatically sets the following headers,\nboth of which can be overwritten:\n\n================    =======================================\n``Content-Type``    ``application/json``\n``Accept``          ``application/json, */*``\n================    =======================================\n\n\nExplicit JSON\n-------------\n\nYou can use ``--json, -j`` to explicitly set ``Accept``\nto ``application/json`` regardless of whether you are sending data\n(it's a shortcut for setting the header via the usual header notation:\n``http url Accept:'application/json, */*'``). Additionally,\nHTTPie will try to detect JSON responses even when the\n``Content-Type`` is incorrectly ``text/plain`` or unknown.\n\n\n\nNon-string JSON fields\n----------------------\n\nNon-string fields use the ``:=`` separator, which allows you to embed raw JSON\ninto the resulting object. Text and raw JSON files can also be embedded into\nfields using ``=@`` and ``:=@``:\n\n.. code-block:: bash\n\n    $ http PUT api.example.com/person/1 \\\n        name=John \\\n        age:=29 married:=false hobbies:='[\"http\", \"pies\"]' \\  # Raw JSON\n        description=@about-john.txt \\   # Embed text file\n        bookmarks:=@bookmarks.json      # Embed JSON file\n\n\n.. code-block:: http\n\n    PUT /person/1 HTTP/1.1\n    Accept: application/json, */*\n    Content-Type: application/json\n    Host: api.example.com\n\n    {\n        \"age\": 29,\n        \"hobbies\": [\n            \"http\",\n            \"pies\"\n        ],\n        \"description\": \"John is a nice guy who likes pies.\",\n        \"married\": false,\n        \"name\": \"John\",\n        \"bookmarks\": {\n            \"HTTPie\": \"https://httpie.org\",\n        }\n    }\n\n\nPlease note that with this syntax the command gets unwieldy when sending\ncomplex data. In that case it's always better to use `redirected input`_:\n\n.. code-block:: bash\n\n    $ http POST api.example.com/person/1 < person.json\n\n\nForms\n=====\n\nSubmitting forms is very similar to sending `JSON`_ requests. Often the only\ndifference is in adding the ``--form, -f`` option, which ensures that\ndata fields are serialized as, and ``Content-Type`` is set to,\n``application/x-www-form-urlencoded; charset=utf-8``. It is possible to make\nform data the implicit content type instead of JSON\nvia the `config`_ file.\n\n\nRegular forms\n-------------\n\n.. code-block:: bash\n\n    $ http --form POST api.example.org/person/1 name='John Smith'\n\n\n.. code-block:: http\n\n    POST /person/1 HTTP/1.1\n    Content-Type: application/x-www-form-urlencoded; charset=utf-8\n\n    name=John+Smith\n\n\nFile upload forms\n-----------------\n\nIf one or more file fields is present, the serialization and content type is\n``multipart/form-data``:\n\n.. code-block:: bash\n\n    $ http -f POST example.com/jobs name='John Smith' cv@~/Documents/cv.pdf\n\n\nThe request above is the same as if the following HTML form were\nsubmitted:\n\n.. code-block:: html\n\n    <form enctype=\"multipart/form-data\" method=\"post\" action=\"http://example.com/jobs\">\n        <input type=\"text\" name=\"name\" />\n        <input type=\"file\" name=\"cv\" />\n    </form>\n\nNote that ``@`` is used to simulate a file upload form field, whereas\n``=@`` just embeds the file content as a regular text field value.\n\n\nHTTP headers\n============\n\nTo set custom headers you can use the ``Header:Value`` notation:\n\n.. code-block:: bash\n\n    $ http example.org  User-Agent:Bacon/1.0  'Cookie:valued-visitor=yes;foo=bar'  \\\n        X-Foo:Bar  Referer:https://httpie.org/\n\n\n.. code-block:: http\n\n    GET / HTTP/1.1\n    Accept: */*\n    Accept-Encoding: gzip, deflate\n    Cookie: valued-visitor=yes;foo=bar\n    Host: example.org\n    Referer: https://httpie.org/\n    User-Agent: Bacon/1.0\n    X-Foo: Bar\n\n\nDefault request headers\n-----------------------\n\nThere are a couple of default headers that HTTPie sets:\n\n.. code-block:: http\n\n    GET / HTTP/1.1\n    Accept: */*\n    Accept-Encoding: gzip, deflate\n    User-Agent: HTTPie/<version>\n    Host: <taken-from-URL>\n\n\n\nAny of these except ``Host`` can be overwritten and some of them unset.\n\n\n\nEmpty headers and header un-setting\n-----------------------------------\n\nTo unset a previously specified header\n(such a one of the default headers), use ``Header:``:\n\n\n.. code-block:: bash\n\n    $ http httpbin.org/headers Accept: User-Agent:\n\n\nTo send a header with an empty value, use ``Header;``:\n\n\n.. code-block:: bash\n\n    $ http httpbin.org/headers 'Header;'\n\n\nLimiting response headers\n-------------------------\n\nThe ``--max-headers=n`` options allows you to control the number of headers\nHTTPie reads before giving up (the default ``0``, i.e., there\u2019s no limit).\n\n\n.. code-block:: bash\n\n    $ http --max-headers=100 httpbin.org/get\n\n\n\nCookies\n=======\n\nHTTP clients send cookies to the server as regular `HTTP headers`_. That means,\nHTTPie does not offer any special syntax for specifying cookies \u2014 the usual\n``Header:Value`` notation is used:\n\n\nSend a single cookie:\n\n.. code-block:: bash\n\n    $ http example.org Cookie:sessionid=foo\n\n.. code-block:: http\n\n    GET / HTTP/1.1\n    Accept: */*\n    Accept-Encoding: gzip, deflate\n    Connection: keep-alive\n    Cookie: sessionid=foo\n    Host: example.org\n    User-Agent: HTTPie/0.9.9\n\n\nSend multiple cookies\n(note the header is quoted to prevent the shell from interpreting the ``;``):\n\n.. code-block:: bash\n\n    $ http example.org 'Cookie:sessionid=foo;another-cookie=bar'\n\n.. code-block:: http\n\n    GET / HTTP/1.1\n    Accept: */*\n    Accept-Encoding: gzip, deflate\n    Connection: keep-alive\n    Cookie: sessionid=foo;another-cookie=bar\n    Host: example.org\n    User-Agent: HTTPie/0.9.9\n\n\nIf you often deal with cookies in your requests, then chances are you'd appreciate\nthe `sessions`_ feature.\n\n\nAuthentication\n==============\n\nThe currently supported authentication schemes are Basic and Digest\n(see `auth plugins`_ for more). There are two flags that control authentication:\n\n===================     ======================================================\n``--auth, -a``          Pass a ``username:password`` pair as\n                        the argument. Or, if you only specify a username\n                        (``-a username``), you'll be prompted for\n                        the password before the request is sent.\n                        To send an empty password, pass ``username:``.\n                        The ``username:password@hostname`` URL syntax is\n                        supported as well (but credentials passed via ``-a``\n                        have higher priority).\n\n``--auth-type, -A``     Specify the auth mechanism. Possible values are\n                        ``basic`` and ``digest``. The default value is\n                        ``basic`` so it can often be omitted.\n===================     ======================================================\n\n\n\nBasic auth\n----------\n\n\n.. code-block:: bash\n\n    $ http -a username:password example.org\n\n\nDigest auth\n-----------\n\n\n.. code-block:: bash\n\n    $ http -A digest -a username:password example.org\n\n\nPassword prompt\n---------------\n\n.. code-block:: bash\n\n    $ http -a username example.org\n\n\n``.netrc``\n----------\n\nAuthentication information from your ``~/.netrc``\nfile is by default honored as well.\n\nFor example:\n\n.. code-block:: bash\n\n    $ cat ~/.netrc\n    machine httpbin.org\n    login httpie\n    password test\n\n.. code-block:: bash\n\n    $ http httpbin.org/basic-auth/httpie/test\n    HTTP/1.1 200 OK\n    [...]\n\nThis can be disabled with the ``--ignore-netrc`` option:\n\n.. code-block:: bash\n\n    $ http --ignore-netrc httpbin.org/basic-auth/httpie/test\n    HTTP/1.1 401 UNAUTHORIZED\n    [...]\n\n\nAuth plugins\n------------\n\nAdditional authentication mechanism can be installed as plugins.\nThey can be found on the `Python Package Index <https://pypi.python.org/pypi?%3Aaction=search&term=httpie&submit=search>`_.\nHere's a few picks:\n\n* `httpie-api-auth <https://github.com/pd/httpie-api-auth>`_: ApiAuth\n* `httpie-aws-auth <https://github.com/httpie/httpie-aws-auth>`_: AWS / Amazon S3\n* `httpie-edgegrid <https://github.com/akamai-open/httpie-edgegrid>`_: EdgeGrid\n* `httpie-hmac-auth <https://github.com/guardian/httpie-hmac-auth>`_: HMAC\n* `httpie-jwt-auth <https://github.com/teracyhq/httpie-jwt-auth>`_: JWTAuth (JSON Web Tokens)\n* `httpie-negotiate <https://github.com/ndzou/httpie-negotiate>`_: SPNEGO (GSS Negotiate)\n* `httpie-ntlm <https://github.com/httpie/httpie-ntlm>`_: NTLM (NT LAN Manager)\n* `httpie-oauth <https://github.com/httpie/httpie-oauth>`_: OAuth\n* `requests-hawk <https://github.com/mozilla-services/requests-hawk>`_: Hawk\n\n\n\n\nHTTP redirects\n==============\n\nBy default, HTTP redirects are not followed and only the first\nresponse is shown:\n\n\n.. code-block:: bash\n\n    $ http httpbin.org/redirect/3\n\n\nFollow ``Location``\n-------------------\n\nTo instruct HTTPie to follow the ``Location`` header of ``30x`` responses\nand show the final response instead, use the ``--follow, -F`` option:\n\n\n.. code-block:: bash\n\n    $ http --follow httpbin.org/redirect/3\n\n\nShowing intermediary redirect responses\n---------------------------------------\n\nIf you additionally wish to see the intermediary requests/responses,\nthen use the ``--all`` option as well:\n\n\n.. code-block:: bash\n\n    $ http --follow --all httpbin.org/redirect/3\n\n\n\nLimiting maximum redirects followed\n-----------------------------------\n\nTo change the default limit of maximum ``30`` redirects, use the\n``--max-redirects=<limit>`` option:\n\n\n.. code-block:: bash\n\n    $ http --follow --all --max-redirects=5 httpbin.org/redirect/3\n\n\nProxies\n=======\n\nYou can specify proxies to be used through the ``--proxy`` argument for each\nprotocol (which is included in the value in case of redirects across protocols):\n\n.. code-block:: bash\n\n    $ http --proxy=http:http://10.10.1.10:3128 --proxy=https:https://10.10.1.10:1080 example.org\n\n\nWith Basic authentication:\n\n.. code-block:: bash\n\n    $ http --proxy=http:http://user:pass@10.10.1.10:3128 example.org\n\n\nEnvironment variables\n---------------------\n\nYou can also configure proxies by environment variables ``ALL_PROXY``,\n``HTTP_PROXY`` and ``HTTPS_PROXY``, and the underlying Requests library will\npick them up as well. If you want to disable proxies configured through\nthe environment variables for certain hosts, you can specify them in ``NO_PROXY``.\n\nIn your ``~/.bash_profile``:\n\n.. code-block:: bash\n\n export HTTP_PROXY=http://10.10.1.10:3128\n export HTTPS_PROXY=https://10.10.1.10:1080\n export NO_PROXY=localhost,example.com\n\n\nSOCKS\n-----\n\nHomebrew-installed HTTPie comes with SOCKS proxy support out of the box.\nTo enable SOCKS proxy support for non-Homebrew  installations, you'll\nmight need to install ``requests[socks]`` manually using ``pip``:\n\n\n.. code-block:: bash\n\n    $ pip install -U requests[socks]\n\nUsage is the same as for other types of `proxies`_:\n\n.. code-block:: bash\n\n    $ http --proxy=http:socks5://user:pass@host:port --proxy=https:socks5://user:pass@host:port example.org\n\n\nHTTPS\n=====\n\n\nServer SSL certificate verification\n-----------------------------------\n\nTo skip the host's SSL certificate verification, you can pass ``--verify=no``\n(default is ``yes``):\n\n.. code-block:: bash\n\n    $ http --verify=no https://example.org\n\n\nCustom CA bundle\n----------------\n\nYou can also use ``--verify=<CA_BUNDLE_PATH>`` to set a custom CA bundle path:\n\n.. code-block:: bash\n\n    $ http --verify=/ssl/custom_ca_bundle https://example.org\n\n\n\nClient side SSL certificate\n---------------------------\nTo use a client side certificate for the SSL communication, you can pass\nthe path of the cert file with ``--cert``:\n\n.. code-block:: bash\n\n    $ http --cert=client.pem https://example.org\n\n\nIf the private key is not contained in the cert file you may pass the\npath of the key file with ``--cert-key``:\n\n.. code-block:: bash\n\n    $ http --cert=client.crt --cert-key=client.key https://example.org\n\n\nSSL version\n-----------\n\nUse the ``--ssl=<PROTOCOL>`` to specify the desired protocol version to use.\nThis will default to SSL v2.3 which will negotiate the highest protocol that both\nthe server and your installation of OpenSSL support. The available protocols\nare ``ssl2.3``, ``ssl3``, ``tls1``, ``tls1.1``, ``tls1.2``, ``tls1.3``. (The actually\navailable set of protocols may vary depending on your OpenSSL installation.)\n\n.. code-block:: bash\n\n    # Specify the vulnerable SSL v3 protocol to talk to an outdated server:\n    $ http --ssl=ssl3 https://vulnerable.example.org\n\n\nOutput options\n==============\n\nBy default, HTTPie only outputs the final response and the whole response\nmessage is printed (headers as well as the body). You can control what should\nbe printed via several options:\n\n=================   =====================================================\n``--headers, -h``   Only the response headers are printed.\n``--body, -b``      Only the response body is printed.\n``--verbose, -v``   Print the whole HTTP exchange (request and response).\n                    This option also enables ``--all`` (see below).\n``--print, -p``     Selects parts of the HTTP exchange.\n=================   =====================================================\n\n``--verbose`` can often be useful for debugging the request and generating\ndocumentation examples:\n\n.. code-block:: bash\n\n    $ http --verbose PUT httpbin.org/put hello=world\n    PUT /put HTTP/1.1\n    Accept: application/json, */*\n    Accept-Encoding: gzip, deflate\n    Content-Type: application/json\n    Host: httpbin.org\n    User-Agent: HTTPie/0.2.7dev\n\n    {\n        \"hello\": \"world\"\n    }\n\n\n    HTTP/1.1 200 OK\n    Connection: keep-alive\n    Content-Length: 477\n    Content-Type: application/json\n    Date: Sun, 05 Aug 2012 00:25:23 GMT\n    Server: gunicorn/0.13.4\n\n    {\n        [\u2026]\n    }\n\n\nWhat parts of the HTTP exchange should be printed\n-------------------------------------------------\n\nAll the other `output options`_ are under the hood just shortcuts for\nthe more powerful ``--print, -p``. It accepts a string of characters each\nof which represents a specific part of the HTTP exchange:\n\n==========  ==================\nCharacter   Stands for\n==========  ==================\n``H``       request headers\n``B``       request body\n``h``       response headers\n``b``       response body\n==========  ==================\n\nPrint request and response headers:\n\n.. code-block:: bash\n\n    $ http --print=Hh PUT httpbin.org/put hello=world\n\n\nViewing intermediary requests/responses\n---------------------------------------\n\nTo see all the HTTP communication, i.e. the final request/response as\nwell as any possible  intermediary requests/responses, use the ``--all``\noption. The intermediary HTTP communication include followed redirects\n(with ``--follow``), the first unauthorized request when HTTP digest\nauthentication is used (``--auth=digest``), etc.\n\n.. code-block:: bash\n\n    # Include all responses that lead to the final one:\n    $ http --all --follow httpbin.org/redirect/3\n\n\nThe intermediary requests/response are by default formatted according to\n``--print, -p`` (and its shortcuts described above). If you'd like to change\nthat, use the ``--history-print, -P`` option. It takes the same\narguments as ``--print, -p`` but applies to the intermediary requests only.\n\n\n.. code-block:: bash\n\n    # Print the intermediary requests/responses differently than the final one:\n    $ http -A digest -a foo:bar --all -p Hh -P H httpbin.org/digest-auth/auth/foo/bar\n\n\nConditional body download\n-------------------------\n\nAs an optimization, the response body is downloaded from the server\nonly if it's part of the output. This is similar to performing a ``HEAD``\nrequest, except that it applies to any HTTP method you use.\n\nLet's say that there is an API that returns the whole resource when it is\nupdated, but you are only interested in the response headers to see the\nstatus code after an update:\n\n.. code-block:: bash\n\n    $ http --headers PATCH example.org/Really-Huge-Resource name='New Name'\n\n\nSince we are only printing the HTTP headers here, the connection to the server\nis closed as soon as all the response headers have been received.\nTherefore, bandwidth and time isn't wasted downloading the body\nwhich you don't care about. The response headers are downloaded always,\neven if they are not part of the output\n\n\nRedirected Input\n================\n\nThe universal method for passing request data is through redirected ``stdin``\n(standard input)\u2014piping. Such data is buffered and then with no further\nprocessing used as the request body. There are multiple useful ways to use\npiping:\n\nRedirect from a file:\n\n.. code-block:: bash\n\n    $ http PUT example.com/person/1 X-API-Token:123 < person.json\n\n\nOr the output of another program:\n\n.. code-block:: bash\n\n    $ grep '401 Unauthorized' /var/log/httpd/error_log | http POST example.org/intruders\n\n\nYou can use ``echo`` for simple data:\n\n.. code-block:: bash\n\n    $ echo '{\"name\": \"John\"}' | http PATCH example.com/person/1 X-API-Token:123\n\n\nYou can also use a Bash *here string*:\n\n.. code-block:: bash\n\n    $ http example.com/ <<<'{\"name\": \"John\"}'\n\n\nYou can even pipe web services together using HTTPie:\n\n.. code-block:: bash\n\n    $ http GET https://api.github.com/repos/jakubroztocil/httpie | http POST httpbin.org/post\n\n\nYou can use ``cat`` to enter multiline data on the terminal:\n\n.. code-block:: bash\n\n    $ cat | http POST example.com\n    <paste>\n    ^D\n\n\n.. code-block:: bash\n\n    $ cat | http POST example.com/todos Content-Type:text/plain\n    - buy milk\n    - call parents\n    ^D\n\n\nOn OS X, you can send the contents of the clipboard with ``pbpaste``:\n\n.. code-block:: bash\n\n    $ pbpaste | http PUT example.com\n\n\nPassing data through ``stdin`` cannot be combined with data fields specified\non the command line:\n\n\n.. code-block:: bash\n\n    $ echo 'data' | http POST example.org more=data   # This is invalid\n\n\nTo prevent HTTPie from reading ``stdin`` data you can use the\n``--ignore-stdin`` option.\n\n\nRequest data from a filename\n----------------------------\n\nAn alternative to redirected ``stdin`` is specifying a filename (as\n``@/path/to/file``) whose content is used as if it came from ``stdin``.\n\nIt has the advantage that the ``Content-Type``\nheader is automatically set to the appropriate value based on the\nfilename extension. For example, the following request sends the\nverbatim contents of that XML file with ``Content-Type: application/xml``:\n\n.. code-block:: bash\n\n    $ http PUT httpbin.org/put @/data/file.xml\n\n\nTerminal output\n===============\n\nHTTPie does several things by default in order to make its terminal output\neasy to read.\n\n\nColors and formatting\n---------------------\n\nSyntax highlighting is applied to HTTP headers and bodies (where it makes\nsense). You can choose your preferred color scheme via the ``--style`` option\nif you don't like the default one (see ``$ http --help`` for the possible\nvalues).\n\nAlso, the following formatting is applied:\n\n* HTTP headers are sorted by name.\n* JSON data is indented, sorted by keys, and unicode escapes are converted\n  to the characters they represent.\n\nOne of these options can be used to control output processing:\n\n====================   ========================================================\n``--pretty=all``       Apply both colors and formatting.\n                       Default for terminal output.\n``--pretty=colors``    Apply colors.\n``--pretty=format``    Apply formatting.\n``--pretty=none``      Disables output processing.\n                       Default for redirected output.\n====================   ========================================================\n\nBinary data\n-----------\n\nBinary data is suppressed for terminal output, which makes it safe to perform\nrequests to URLs that send back binary data. Binary data is suppressed also in\nredirected, but prettified output. The connection is closed as soon as we know\nthat the response body is binary,\n\n.. code-block:: bash\n\n    $ http example.org/Movie.mov\n\n\nYou will nearly instantly see something like this:\n\n.. code-block:: http\n\n    HTTP/1.1 200 OK\n    Accept-Ranges: bytes\n    Content-Encoding: gzip\n    Content-Type: video/quicktime\n    Transfer-Encoding: chunked\n\n    +-----------------------------------------+\n    | NOTE: binary data not shown in terminal |\n    +-----------------------------------------+\n\n\nRedirected output\n=================\n\nHTTPie uses a different set of defaults for redirected output than for\n`terminal output`_. The differences being:\n\n* Formatting and colors aren't applied (unless ``--pretty`` is specified).\n* Only the response body is printed (unless one of the `output options`_ is set).\n* Also, binary data isn't suppressed.\n\nThe reason is to make piping HTTPie's output to another programs and\ndownloading files work with no extra flags. Most of the time, only the raw\nresponse body is of an interest when the output is redirected.\n\nDownload a file:\n\n.. code-block:: bash\n\n    $ http example.org/Movie.mov > Movie.mov\n\n\nDownload an image of Octocat, resize it using ImageMagick, upload it elsewhere:\n\n.. code-block:: bash\n\n    $ http octodex.github.com/images/original.jpg | convert - -resize 25% -  | http example.org/Octocats\n\n\nForce colorizing and formatting, and show both the request and the response in\n``less`` pager:\n\n.. code-block:: bash\n\n    $ http --pretty=all --verbose example.org | less -R\n\n\nThe ``-R`` flag tells ``less`` to interpret color escape sequences included\nHTTPie`s output.\n\nYou can create a shortcut for invoking HTTPie with colorized and paged output\nby adding the following to your ``~/.bash_profile``:\n\n.. code-block:: bash\n\n    function httpless {\n        # `httpless example.org'\n        http --pretty=all --print=hb \"$@\" | less -R;\n    }\n\n\nDownload mode\n=============\n\nHTTPie features a download mode in which it acts similarly to ``wget``.\n\nWhen enabled using the ``--download, -d`` flag, response headers are printed to\nthe terminal (``stderr``), and a progress bar is shown while the response body\nis being saved to a file.\n\n.. code-block:: bash\n\n    $ http --download https://github.com/jakubroztocil/httpie/archive/master.tar.gz\n\n.. code-block:: http\n\n    HTTP/1.1 200 OK\n    Content-Disposition: attachment; filename=httpie-master.tar.gz\n    Content-Length: 257336\n    Content-Type: application/x-gzip\n\n    Downloading 251.30 kB to \"httpie-master.tar.gz\"\n    Done. 251.30 kB in 2.73862s (91.76 kB/s)\n\n\nDownloaded filename\n--------------------\n\nThere are three mutually exclusive ways through which HTTPie determines\nthe output filename (with decreasing priority):\n\n1. You can explicitly provide it via ``--output, -o``.\n   The file gets overwritten if it already exists\n   (or appended to with ``--continue, -c``).\n2. The server may specify the filename in the optional ``Content-Disposition``\n   response header. Any leading dots are stripped from a server-provided filename.\n3. The last resort HTTPie uses is to generate the filename from a combination\n   of the request URL and the response ``Content-Type``.\n   The initial URL is always used as the basis for\n   the generated filename \u2014 even if there has been one or more redirects.\n\n\nTo prevent data loss by overwriting, HTTPie adds a unique numerical suffix to the\nfilename when necessary (unless specified with ``--output, -o``).\n\n\nPiping while downloading\n------------------------\n\nYou can also redirect the response body to another program while the response\nheaders and progress are still shown in the terminal:\n\n.. code-block:: bash\n\n    $ http -d https://github.com/jakubroztocil/httpie/archive/master.tar.gz |  tar zxf -\n\n\n\nResuming downloads\n------------------\n\nIf ``--output, -o`` is specified, you can resume a partial download using the\n``--continue, -c`` option. This only works with servers that support\n``Range`` requests and ``206 Partial Content`` responses. If the server doesn't\nsupport that, the whole file will simply be downloaded:\n\n.. code-block:: bash\n\n    $ http -dco file.zip example.org/file\n\nOther notes\n-----------\n\n* The ``--download`` option only changes how the response body is treated.\n* You can still set custom headers, use sessions, ``--verbose, -v``, etc.\n* ``--download`` always implies ``--follow`` (redirects are followed).\n* HTTPie exits with status code ``1`` (error) if the body hasn't been fully\n  downloaded.\n* ``Accept-Encoding`` cannot be set with ``--download``.\n\n\nStreamed responses\n==================\n\nResponses are downloaded and printed in chunks which allows for streaming\nand large file downloads without using too much memory. However, when\n`colors and formatting`_ is applied, the whole response is buffered and only\nthen processed at once.\n\n\nDisabling buffering\n-------------------\n\nYou can use the ``--stream, -S`` flag to make two things happen:\n\n1. The output is flushed in much smaller chunks without any buffering,\n   which makes HTTPie behave kind of like ``tail -f`` for URLs.\n\n2. Streaming becomes enabled even when the output is prettified: It will be\n   applied to each line of the response and flushed immediately. This makes\n   it possible to have a nice output for long-lived requests, such as one\n   to the Twitter streaming API.\n\n\nExamples use cases\n------------------\n\nPrettified streamed response:\n\n.. code-block:: bash\n\n    $ http --stream -f -a YOUR-TWITTER-NAME https://stream.twitter.com/1/statuses/filter.json track='Justin Bieber'\n\n\nStreamed output by small chunks al\u00e1 ``tail -f``:\n\n.. code-block:: bash\n\n    # Send each new tweet (JSON object) mentioning \"Apple\" to another\n    # server as soon as it arrives from the Twitter streaming API:\n    $ http --stream -f -a YOUR-TWITTER-NAME https://stream.twitter.com/1/statuses/filter.json track=Apple \\\n    | while read tweet; do echo \"$tweet\" | http POST example.org/tweets ; done\n\nSessions\n========\n\nBy default, every request HTTPie makes is completely independent of any\nprevious ones to the same host.\n\n\nHowever, HTTPie also supports persistent\nsessions via the ``--session=SESSION_NAME_OR_PATH`` option. In a session,\ncustom `HTTP headers`_ (except for the ones starting with ``Content-`` or ``If-``),\n`authentication`_, and `cookies`_\n(manually specified or sent by the server) persist between requests\nto the same host.\n\n\n.. code-block:: bash\n\n    # Create a new session\n    $ http --session=/tmp/session.json example.org API-Token:123\n\n    # Re-use an existing session \u2014 API-Token will be set:\n    $ http --session=/tmp/session.json example.org\n\n\nAll session data, including credentials, cookie data,\nand custom headers are stored in plain text.\nThat means session files can also be created and edited manually in a text\neditor\u2014they are regular JSON. It also means that they can be read by anyone\nwho has access to the session file.\n\n\nNamed sessions\n--------------\n\n\nYou can create one or more named session per host. For example, this is how\nyou can create a new session named ``user1`` for ``example.org``:\n\n.. code-block:: bash\n\n    $ http --session=user1 -a user1:password example.org X-Foo:Bar\n\nFrom now on, you can refer to the session by its name. When you choose to\nuse the session again, any previously specified authentication or HTTP headers\nwill automatically be set:\n\n.. code-block:: bash\n\n    $ http --session=user1 example.org\n\nTo create or reuse a different session, simple specify a different name:\n\n.. code-block:: bash\n\n    $ http --session=user2 -a user2:password example.org X-Bar:Foo\n\nNamed sessions\u2019s data is stored in JSON files in the the ``sessions``\nsubdirectory of the `config`_ directory:\n``~/.httpie/sessions/<host>/<name>.json``\n(``%APPDATA%\\httpie\\sessions\\<host>\\<name>.json`` on Windows).\n\n\nAnonymous sessions\n------------------\n\nInstead of a name, you can also directly specify a path to a session file. This\nallows for sessions to be re-used across multiple hosts:\n\n.. code-block:: bash\n\n    $ http --session=/tmp/session.json example.org\n    $ http --session=/tmp/session.json admin.example.org\n    $ http --session=~/.httpie/sessions/another.example.org/test.json example.org\n    $ http --session-read-only=/tmp/session.json example.org\n\n\nReadonly session\n----------------\n\nTo use an existing session file without updating it from the request/response\nexchange once it is created, specify the session name via\n``--session-read-only=SESSION_NAME_OR_PATH`` instead.\n\n\nConfig\n======\n\nHTTPie uses a simple ``config.json`` file. The file doesn\u2019t exist by default\nbut you can create it manually.\n\n\nConfig file directory\n---------------------\n\nThe default location of the configuration file is ``~/.httpie/config.json``\n(or ``%APPDATA%\\httpie\\config.json`` on Windows).\n\nThe config directory can be changed by setting the ``$HTTPIE_CONFIG_DIR``\nenvironment variable:\n\n.. code-block:: bash\n\n    $ export HTTPIE_CONFIG_DIR=/tmp/httpie\n    $ http example.org\n\nTo view the exact location run ``http --debug``.\n\n\nConfigurable options\n--------------------\n\nCurrently HTTPie offers a single configurable option:\n\n\n``default_options``\n~~~~~~~~~~~~~~~~~~~\n\nAn ``Array`` (by default empty) of default options that should be applied to\nevery invocation of HTTPie.\n\nFor instance, you can use this config option to change your default color theme:\n\n\n.. code-block:: bash\n\n    $ cat ~/.httpie/config.json\n\n\n.. code-block:: json\n\n    {\n        \"default_options\": [\n          \"--style=fruity\"\n        ]\n    }\n\n\nEven though it is technically possible to include there any of HTTPie\u2019s\noptions, it is not recommended to modify the default behaviour in a way\nthat would break your compatibility with the wider world as that can\ngenerate a lot of confusion.\n\n\nUn-setting previously specified options\n---------------------------------------\n\nDefault options from the config file, or specified any other way,\ncan be unset for a particular invocation via ``--no-OPTION`` arguments passed\non the command line (e.g., ``--no-style`` or ``--no-session``).\n\n\n\nScripting\n=========\n\nWhen using HTTPie from shell scripts, it can be handy to set the\n``--check-status`` flag. It instructs HTTPie to exit with an error if the\nHTTP status is one of ``3xx``, ``4xx``, or ``5xx``. The exit status will\nbe ``3`` (unless ``--follow`` is set), ``4``, or ``5``,\nrespectively.\n\n.. code-block:: bash\n\n    #!/bin/bash\n\n    if http --check-status --ignore-stdin --timeout=2.5 HEAD example.org/health &> /dev/null; then\n        echo 'OK!'\n    else\n        case $? in\n            2) echo 'Request timed out!' ;;\n            3) echo 'Unexpected HTTP 3xx Redirection!' ;;\n            4) echo 'HTTP 4xx Client Error!' ;;\n            5) echo 'HTTP 5xx Server Error!' ;;\n            6) echo 'Exceeded --max-redirects=<n> redirects!' ;;\n            *) echo 'Other Error!' ;;\n        esac\n    fi\n\n\nBest practices\n--------------\n\nThe default behaviour of automatically reading ``stdin`` is typically not\ndesirable during non-interactive invocations. You most likely want to\nuse the ``--ignore-stdin`` option to disable it.\n\nIt is a common gotcha that without this option HTTPie seemingly hangs.\nWhat happens is that when HTTPie is invoked for example from a cron job,\n``stdin`` is not connected to a terminal.\nTherefore, rules for `redirected input`_ apply, i.e., HTTPie starts to read it\nexpecting that the request body will be passed through.\nAnd since there's no data nor ``EOF``, it will be stuck. So unless you're\npiping some data to HTTPie, this flag should be used in scripts.\n\nAlso, it might be good to set a connection ``--timeout`` limit to prevent\nyour program from hanging if the server never responds.\n\n\n\nMeta\n====\n\nInterface design\n----------------\n\nThe syntax of the command arguments closely corresponds to the actual HTTP\nrequests sent over the wire. It has the advantage  that it's easy to remember\nand read. It is often possible to translate an HTTP request to an HTTPie\nargument list just by inlining the request elements. For example, compare this\nHTTP request:\n\n.. code-block:: http\n\n    POST /collection HTTP/1.1\n    X-API-Key: 123\n    User-Agent: Bacon/1.0\n    Content-Type: application/x-www-form-urlencoded\n\n    name=value&name2=value2\n\n\nwith the HTTPie command that sends it:\n\n.. code-block:: bash\n\n    $ http -f POST example.org/collection \\\n      X-API-Key:123 \\\n      User-Agent:Bacon/1.0 \\\n      name=value \\\n      name2=value2\n\n\nNotice that both the order of elements and the syntax is very similar,\nand that only a small portion of the command is used to control HTTPie and\ndoesn't directly correspond to any part of the request (here it's only ``-f``\nasking HTTPie to send a form request).\n\nThe two modes, ``--pretty=all`` (default for terminal) and ``--pretty=none``\n(default for redirected output), allow for both user-friendly interactive use\nand usage from scripts, where HTTPie serves as a generic HTTP client.\n\nAs HTTPie is still under heavy development, the existing command line\nsyntax and some of the ``--OPTIONS`` may change slightly before\nHTTPie reaches its final version ``1.0``. All changes are recorded in the\n`change log`_.\n\n\n\nUser support\n------------\n\nPlease use the following support channels:\n\n* `GitHub issues <https://github.com/jkbr/httpie/issues>`_\n  for bug reports and feature requests.\n* `Our Gitter chat room <https://gitter.im/jkbrzt/httpie>`_\n  to ask questions, discuss features, and for general discussion.\n* `StackOverflow <https://stackoverflow.com>`_\n  to ask questions (please make sure to use the\n  `httpie <https://stackoverflow.com/questions/tagged/httpie>`_ tag).\n* Tweet directly to `@clihttp <https://twitter.com/clihttp>`_.\n* You can also tweet directly to `@jakubroztocil`_.\n\n\nRelated projects\n----------------\n\nDependencies\n~~~~~~~~~~~~\n\nUnder the hood, HTTPie uses these two amazing libraries:\n\n* `Requests <https://python-requests.org>`_\n  \u2014 Python HTTP library for humans\n* `Pygments <https://pygments.org/>`_\n  \u2014 Python syntax highlighter\n\n\nHTTPie friends\n~~~~~~~~~~~~~~\n\nHTTPie plays exceptionally well with the following tools:\n\n* `jq <https://stedolan.github.io/jq/>`_\n  \u2014 CLI JSON processor that\n  works great in conjunction with HTTPie\n* `http-prompt <https://github.com/eliangcs/http-prompt>`_\n  \u2014  interactive shell for HTTPie featuring autocomplete\n  and command syntax highlighting\n\n\nAlternatives\n~~~~~~~~~~~~\n\n* `httpcat <https://github.com/jakubroztocil/httpcat>`_ \u2014 a lower-level sister utility\n  of HTTPie for constructing raw HTTP requests on the command line.\n* `curl <https://curl.haxx.se>`_ \u2014 a \"Swiss knife\" command line tool and\n  an exceptional library for transferring data with URLs.\n\n\nContributing\n------------\n\nSee `CONTRIBUTING.rst <https://github.com/jakubroztocil/httpie/blob/master/CONTRIBUTING.rst>`_.\n\n\nChange log\n----------\n\nSee `CHANGELOG <https://github.com/jakubroztocil/httpie/blob/master/CHANGELOG.rst>`_.\n\n\nArtwork\n-------\n\n* `Logo <https://github.com/claudiatd/httpie-artwork>`_ by `Cl\u00e1udia Delgado <https://github.com/claudiatd>`_.\n* `Animation <https://raw.githubusercontent.com/jakubroztocil/httpie/master/httpie.gif>`_ by `Allen Smith <https://github.com/loranallensmith>`_ of GitHub.\n\n\n\nLicence\n-------\n\nBSD-3-Clause: `LICENSE <https://github.com/jakubroztocil/httpie/blob/master/LICENSE>`_.\n\n\n\nAuthors\n-------\n\n`Jakub Roztocil`_  (`@jakubroztocil`_) created HTTPie and `these fine people`_\nhave contributed.\n\n\n.. _pip: https://pip.pypa.io/en/stable/installing/\n.. _Github API: https://developer.github.com/v3/issues/comments/#create-a-comment\n.. _these fine people: https://github.com/jakubroztocil/httpie/contributors\n.. _Jakub Roztocil: https://roztocil.co\n.. _@jakubroztocil: https://twitter.com/jakubroztocil\n\n\n.. |pypi| image:: https://img.shields.io/pypi/v/httpie.svg?style=flat-square&label=latest%20stable%20version\n    :target: https://pypi.python.org/pypi/httpie\n    :alt: Latest version released on PyPi\n\n.. |coverage| image:: https://img.shields.io/codecov/c/github/jakubroztocil/httpie?style=flat-square\n    :target: https://codecov.io/gh/jakubroztocil/httpie\n    :alt: Test coverage\n\n.. |build| image:: https://github.com/jakubroztocil/httpie/workflows/Build/badge.svg\n    :target: https://github.com/jakubroztocil/httpie/actions\n    :alt: Build status of the master branch on Mac/Linux/Windows\n\n.. |gitter| image:: https://img.shields.io/gitter/room/jkbrzt/httpie.svg?style=flat-square\n    :target: https://gitter.im/jkbrzt/httpie\n    :alt: Chat on Gitter\n\n.. |downloads| image:: https://pepy.tech/badge/httpie\n    :target: https://pepy.tech/project/httpie\n    :alt: Download count\n\n"}, {"repo": "rails/rails", "language": "Ruby", "readme_contents": "# Welcome to Rails\n\n## What's Rails?\n\nRails is a web-application framework that includes everything needed to\ncreate database-backed web applications according to the\n[Model-View-Controller (MVC)](https://en.wikipedia.org/wiki/Model-view-controller)\npattern.\n\nUnderstanding the MVC pattern is key to understanding Rails. MVC divides your\napplication into three layers: Model, View, and Controller, each with a specific responsibility.\n\n## Model layer\n\nThe _**Model layer**_ represents the domain model (such as Account, Product,\nPerson, Post, etc.) and encapsulates the business logic specific to\nyour application. In Rails, database-backed model classes are derived from\n`ActiveRecord::Base`. [Active Record](activerecord/README.rdoc) allows you to present the data from\ndatabase rows as objects and embellish these data objects with business logic\nmethods.\nAlthough most Rails models are backed by a database, models can also be ordinary\nRuby classes, or Ruby classes that implement a set of interfaces as provided by\nthe [Active Model](activemodel/README.rdoc) module.\n\n## Controller layer\n\nThe _**Controller layer**_ is responsible for handling incoming HTTP requests and\nproviding a suitable response. Usually, this means returning HTML, but Rails controllers\ncan also generate XML, JSON, PDFs, mobile-specific views, and more. Controllers load and\nmanipulate models, and render view templates in order to generate the appropriate HTTP response.\nIn Rails, incoming requests are routed by Action Dispatch to an appropriate controller, and\ncontroller classes are derived from `ActionController::Base`. Action Dispatch and Action Controller\nare bundled together in [Action Pack](actionpack/README.rdoc).\n\n## View layer\n\nThe _**View layer**_ is composed of \"templates\" that are responsible for providing\nappropriate representations of your application's resources. Templates can\ncome in a variety of formats, but most view templates are HTML with embedded\nRuby code (ERB files). Views are typically rendered to generate a controller response \nor to generate the body of an email. In Rails, View generation is handled by [Action View](actionview/README.rdoc).\n\n## Frameworks and libraries\n\n[Active Record](activerecord/README.rdoc), [Active Model](activemodel/README.rdoc), [Action Pack](actionpack/README.rdoc), and [Action View](actionview/README.rdoc) can each be used independently outside Rails.\nIn addition to that, Rails also comes with [Action Mailer](actionmailer/README.rdoc), a library\nto generate and send emails; [Action Mailbox](actionmailbox/README.md), a library to receive emails within a Rails application;\n[Active Job](activejob/README.md), a framework for declaring jobs and making them run on a variety of queuing\nbackends; [Action Cable](actioncable/README.md), a framework to\nintegrate WebSockets with a Rails application; [Active Storage](activestorage/README.md), a library to attach cloud\nand local files to Rails applications; [Action Text](actiontext/README.md), a library to handle rich text content;\nand [Active Support](activesupport/README.rdoc), a collection\nof utility classes and standard library extensions that are useful for Rails,\nand may also be used independently outside Rails.\n\n## Getting Started\n\n1. Install Rails at the command prompt if you haven't yet:\n\n        $ gem install rails\n\n2. At the command prompt, create a new Rails application:\n\n        $ rails new myapp\n\n   where \"myapp\" is the application name.\n\n3. Change directory to `myapp` and start the web server:\n\n        $ cd myapp\n        $ rails server\n\n   Run with `--help` or `-h` for options.\n\n4. Go to `http://localhost:3000` and you'll see:\n\"Yay! You\u2019re on Rails!\"\n\n5. Follow the guidelines to start developing your application. You may find\n   the following resources handy:\n    * [Getting Started with Rails](https://guides.rubyonrails.org/getting_started.html)\n    * [Ruby on Rails Guides](https://guides.rubyonrails.org)\n    * [The API Documentation](https://api.rubyonrails.org)\n\n## Contributing\n\n[![Code Triage Badge](https://www.codetriage.com/rails/rails/badges/users.svg)](https://www.codetriage.com/rails/rails)\n\nWe encourage you to contribute to Ruby on Rails! Please check out the\n[Contributing to Ruby on Rails guide](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html) for guidelines about how to proceed. [Join us!](https://contributors.rubyonrails.org)\n\nTrying to report a possible security vulnerability in Rails? Please\ncheck out our [security policy](https://rubyonrails.org/security/) for\nguidelines about how to proceed.\n\nEveryone interacting in Rails and its sub-projects' codebases, issue trackers, chat rooms, and mailing lists is expected to follow the Rails [code of conduct](https://rubyonrails.org/conduct/).\n\n## Code Status\n\n[![Build Status](https://badge.buildkite.com/ab1152b6a1f6a61d3ea4ec5b3eece8d4c2b830998459c75352.svg?branch=master)](https://buildkite.com/rails/rails)\n\n## License\n\nRuby on Rails is released under the [MIT License](https://opensource.org/licenses/MIT).\n"}, {"repo": "typicode/json-server", "language": "JavaScript", "readme_contents": "# JSON Server [![](https://travis-ci.org/typicode/json-server.svg?branch=master)](https://travis-ci.org/typicode/json-server) [![](https://badge.fury.io/js/json-server.svg)](http://badge.fury.io/js/json-server)\n\nGet a full fake REST API with __zero coding__ in __less than 30 seconds__ (seriously)\n\nCreated with <3 for front-end developers who need a quick back-end for prototyping and mocking.\n\n* [Egghead.io free video tutorial - Creating demo APIs with json-server](https://egghead.io/lessons/nodejs-creating-demo-apis-with-json-server)\n* [JSONPlaceholder - Live running version](https://jsonplaceholder.typicode.com)\n* [__My JSON Server__ - no installation required, use your own data](https://my-json-server.typicode.com)\n\nSee also:\n* :dog: [husky - Git hooks made easy](https://github.com/typicode/husky)\n* :hotel: [hotel - developer tool with local .localhost domain and https out of the box](https://github.com/typicode/hotel)\n\n<p>&nbsp;</p>\n\n<h2 align=\"center\">Gold sponsors \ud83e\udd47</h2>\n\n<p>&nbsp;</p>\n\n<p align=\"center\">\n  <a href=\"https://tryretool.com/?utm_source=sponsor&utm_campaign=typicode\" target=\"_blank\">\n    <img src=\"https://i.imgur.com/IBItATn.png\" height=\"70px\">\n  </a>\n</p>\n\n<p>&nbsp;</p>\n\n<h2 align=\"center\">Bronze sponsors \ud83e\udd49</h2>\n\n<p>&nbsp;</p>\n\n<p align=\"center\">\n  <a href=\"https://www.zinggrid.com/hello/json-server?utm_source=jsonserver&utm_medium=github&utm_campaign=sponsorship\" target=\"_blank\">\n    <img src=\"https://i.imgur.com/3mJGTAQ.png\" height=\"30px\">\n  </a>\n</p>\n\n<p>&nbsp;</p>\n\n[Become a sponsor and have your company logo here](https://github.com/users/typicode/sponsorship)\n\n## Table of contents\n\n<!-- toc -->\n\n- [Getting started](#getting-started)\n- [Routes](#routes)\n  * [Plural routes](#plural-routes)\n  * [Singular routes](#singular-routes)\n  * [Filter](#filter)\n  * [Paginate](#paginate)\n  * [Sort](#sort)\n  * [Slice](#slice)\n  * [Operators](#operators)\n  * [Full-text search](#full-text-search)\n  * [Relationships](#relationships)\n  * [Database](#database)\n  * [Homepage](#homepage)\n- [Extras](#extras)\n  * [Static file server](#static-file-server)\n  * [Alternative port](#alternative-port)\n  * [Access from anywhere](#access-from-anywhere)\n  * [Remote schema](#remote-schema)\n  * [Generate random data](#generate-random-data)\n  * [HTTPS](#https)\n  * [Add custom routes](#add-custom-routes)\n  * [Add middlewares](#add-middlewares)\n  * [CLI usage](#cli-usage)\n  * [Module](#module)\n    + [Simple example](#simple-example)\n    + [Custom routes example](#custom-routes-example)\n    + [Access control example](#access-control-example)\n    + [Custom output example](#custom-output-example)\n    + [Rewriter example](#rewriter-example)\n    + [Mounting JSON Server on another endpoint example](#mounting-json-server-on-another-endpoint-example)\n    + [API](#api)\n  * [Deployment](#deployment)\n- [Links](#links)\n  * [Video](#video)\n  * [Articles](#articles)\n  * [Third-party tools](#third-party-tools)\n- [License](#license)\n\n<!-- tocstop -->\n\n## Getting started\n\nInstall JSON Server \n\n```\nnpm install -g json-server\n```\n\nCreate a `db.json` file with some data\n\n```json\n{\n  \"posts\": [\n    { \"id\": 1, \"title\": \"json-server\", \"author\": \"typicode\" }\n  ],\n  \"comments\": [\n    { \"id\": 1, \"body\": \"some comment\", \"postId\": 1 }\n  ],\n  \"profile\": { \"name\": \"typicode\" }\n}\n```\n\nStart JSON Server\n\n```bash\njson-server --watch db.json\n```\n\nNow if you go to [http://localhost:3000/posts/1](http://localhost:3000/posts/1), you'll get\n\n```json\n{ \"id\": 1, \"title\": \"json-server\", \"author\": \"typicode\" }\n```\n\nAlso when doing requests, it's good to know that:\n\n- If you make POST, PUT, PATCH or DELETE requests, changes will be automatically and safely saved to `db.json` using [lowdb](https://github.com/typicode/lowdb).\n- Your request body JSON should be object enclosed, just like the GET output. (for example `{\"name\": \"Foobar\"}`)\n- Id values are not mutable. Any `id` value in the body of your PUT or PATCH request will be ignored. Only a value set in a POST request will be respected, but only if not already taken.\n- A POST, PUT or PATCH request should include a `Content-Type: application/json` header to use the JSON in the request body. Otherwise it will result in a 200 OK but without changes being made to the data.\n\n## Routes\n\nBased on the previous `db.json` file, here are all the default routes. You can also add [other routes](#add-custom-routes) using `--routes`.\n\n### Plural routes\n\n```\nGET    /posts\nGET    /posts/1\nPOST   /posts\nPUT    /posts/1\nPATCH  /posts/1\nDELETE /posts/1\n```\n\n### Singular routes\n\n```\nGET    /profile\nPOST   /profile\nPUT    /profile\nPATCH  /profile\n```\n\n### Filter\n\nUse `.` to access deep properties\n\n```\nGET /posts?title=json-server&author=typicode\nGET /posts?id=1&id=2\nGET /comments?author.name=typicode\n```\n\n### Paginate\n\nUse `_page` and optionally `_limit` to paginate returned data.\n\nIn the `Link` header you'll get `first`, `prev`, `next` and `last` links.\n\n\n```\nGET /posts?_page=7\nGET /posts?_page=7&_limit=20\n```\n\n_10 items are returned by default_\n\n### Sort\n\nAdd `_sort` and `_order` (ascending order by default)\n\n```\nGET /posts?_sort=views&_order=asc\nGET /posts/1/comments?_sort=votes&_order=asc\n```\n\nFor multiple fields, use the following format:\n\n```\nGET /posts?_sort=user,views&_order=desc,asc\n```\n\n### Slice\n\nAdd `_start` and `_end` or `_limit` (an `X-Total-Count` header is included in the response)\n\n```\nGET /posts?_start=20&_end=30\nGET /posts/1/comments?_start=20&_end=30\nGET /posts/1/comments?_start=20&_limit=10\n```\n\n_Works exactly as [Array.slice](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/slice) (i.e. `_start` is inclusive and `_end` exclusive)_\n\n### Operators\n\nAdd `_gte` or `_lte` for getting a range\n\n```\nGET /posts?views_gte=10&views_lte=20\n```\n\nAdd `_ne` to exclude a value\n\n```\nGET /posts?id_ne=1\n```\n\nAdd `_like` to filter (RegExp supported)\n\n```\nGET /posts?title_like=server\n```\n\n### Full-text search\n\nAdd `q`\n\n```\nGET /posts?q=internet\n```\n\n### Relationships\n\nTo include children resources, add `_embed`\n\n```\nGET /posts?_embed=comments\nGET /posts/1?_embed=comments\n```\n\nTo include parent resource, add `_expand`\n\n```\nGET /comments?_expand=post\nGET /comments/1?_expand=post\n```\n\nTo get or create nested resources (by default one level, [add custom routes](#add-custom-routes) for more)\n\n```\nGET  /posts/1/comments\nPOST /posts/1/comments\n```\n\n### Database\n\n```\nGET /db\n```\n\n### Homepage\n\nReturns default index file or serves `./public` directory\n\n```\nGET /\n```\n\n## Extras\n\n### Static file server\n\nYou can use JSON Server to serve your HTML, JS and CSS, simply create a `./public` directory\nor use `--static` to set a different static files directory.\n\n```bash\nmkdir public\necho 'hello world' > public/index.html\njson-server db.json\n```\n\n```bash\njson-server db.json --static ./some-other-dir\n```\n\n### Alternative port\n\nYou can start JSON Server on other ports with the `--port` flag:\n\n```bash\n$ json-server --watch db.json --port 3004\n```\n\n### Access from anywhere\n\nYou can access your fake API from anywhere using CORS and JSONP.\n\n### Remote schema\n\nYou can load remote schemas.\n\n```bash\n$ json-server http://example.com/file.json\n$ json-server http://jsonplaceholder.typicode.com/db\n```\n\n### Generate random data\n\nUsing JS instead of a JSON file, you can create data programmatically.\n\n```javascript\n// index.js\nmodule.exports = () => {\n  const data = { users: [] }\n  // Create 1000 users\n  for (let i = 0; i < 1000; i++) {\n    data.users.push({ id: i, name: `user${i}` })\n  }\n  return data\n}\n```\n\n```bash\n$ json-server index.js\n```\n\n__Tip__ use modules like [Faker](https://github.com/Marak/faker.js), [Casual](https://github.com/boo1ean/casual), [Chance](https://github.com/victorquinn/chancejs) or [JSON Schema Faker](https://github.com/json-schema-faker/json-schema-faker).\n\n### HTTPS\n\nThere are many ways to set up SSL in development. One simple way is to use [hotel](https://github.com/typicode/hotel).\n\n### Add custom routes\n\nCreate a `routes.json` file. Pay attention to start every route with `/`.\n\n```json\n{\n  \"/api/*\": \"/$1\",\n  \"/:resource/:id/show\": \"/:resource/:id\",\n  \"/posts/:category\": \"/posts?category=:category\",\n  \"/articles\\\\?id=:id\": \"/posts/:id\"\n}\n```\n\nStart JSON Server with `--routes` option.\n\n```bash\njson-server db.json --routes routes.json\n```\n\nNow you can access resources using additional routes.\n\n```sh\n/api/posts # \u2192 /posts\n/api/posts/1  # \u2192 /posts/1\n/posts/1/show # \u2192 /posts/1\n/posts/javascript # \u2192 /posts?category=javascript\n/articles?id=1 # \u2192 /posts/1\n```\n\n### Add middlewares\n\nYou can add your middlewares from the CLI using `--middlewares` option:\n\n```js\n// hello.js\nmodule.exports = (req, res, next) => {\n  res.header('X-Hello', 'World')\n  next()\n}\n```\n\n```bash\njson-server db.json --middlewares ./hello.js\njson-server db.json --middlewares ./first.js ./second.js\n```\n\n### CLI usage\n\n```\njson-server [options] <source>\n\nOptions:\n  --config, -c       Path to config file           [default: \"json-server.json\"]\n  --port, -p         Set port                                    [default: 3000]\n  --host, -H         Set host                             [default: \"localhost\"]\n  --watch, -w        Watch file(s)                                     [boolean]\n  --routes, -r       Path to routes file\n  --middlewares, -m  Paths to middleware files                           [array]\n  --static, -s       Set static files directory\n  --read-only, --ro  Allow only GET requests                           [boolean]\n  --no-cors, --nc    Disable Cross-Origin Resource Sharing             [boolean]\n  --no-gzip, --ng    Disable GZIP Content-Encoding                     [boolean]\n  --snapshots, -S    Set snapshots directory                      [default: \".\"]\n  --delay, -d        Add delay to responses (ms)\n  --id, -i           Set database id property (e.g. _id)         [default: \"id\"]\n  --foreignKeySuffix, --fks  Set foreign key suffix, (e.g. _id as in post_id)\n                                                                 [default: \"Id\"]\n  --quiet, -q        Suppress log messages from output                 [boolean]\n  --help, -h         Show help                                         [boolean]\n  --version, -v      Show version number                               [boolean]\n\nExamples:\n  json-server db.json\n  json-server file.js\n  json-server http://example.com/db.json\n\nhttps://github.com/typicode/json-server\n```\n\nYou can also set options in a `json-server.json` configuration file.\n\n```json\n{\n  \"port\": 3000\n}\n```\n\n### Module\n\nIf you need to add authentication, validation, or __any behavior__, you can use the project as a module in combination with other Express middlewares.\n\n#### Simple example\n\n```sh\n$ npm install json-server --save-dev\n```\n\n```js\n// server.js\nconst jsonServer = require('json-server')\nconst server = jsonServer.create()\nconst router = jsonServer.router('db.json')\nconst middlewares = jsonServer.defaults()\n\nserver.use(middlewares)\nserver.use(router)\nserver.listen(3000, () => {\n  console.log('JSON Server is running')\n})\n```\n\n```sh\n$ node server.js\n```\n\nThe path you provide to the `jsonServer.router` function  is relative to the directory from where you launch your node process. If you run the above code from another directory, it\u2019s better to use an absolute path:\n\n```js\nconst path = require('path')\nconst router = jsonServer.router(path.join(__dirname, 'db.json'))\n```\n\nFor an in-memory database, simply pass an object to `jsonServer.router()`.\n\nPlease note also that `jsonServer.router()` can be used in existing Express projects.\n\n#### Custom routes example\n\nLet's say you want a route that echoes query parameters and another one that set a timestamp on every resource created.\n\n```js\nconst jsonServer = require('json-server')\nconst server = jsonServer.create()\nconst router = jsonServer.router('db.json')\nconst middlewares = jsonServer.defaults()\n\n// Set default middlewares (logger, static, cors and no-cache)\nserver.use(middlewares)\n\n// Add custom routes before JSON Server router\nserver.get('/echo', (req, res) => {\n  res.jsonp(req.query)\n})\n\n// To handle POST, PUT and PATCH you need to use a body-parser\n// You can use the one used by JSON Server\nserver.use(jsonServer.bodyParser)\nserver.use((req, res, next) => {\n  if (req.method === 'POST') {\n    req.body.createdAt = Date.now()\n  }\n  // Continue to JSON Server router\n  next()\n})\n\n// Use default router\nserver.use(router)\nserver.listen(3000, () => {\n  console.log('JSON Server is running')\n})\n```\n\n#### Access control example\n\n```js\nconst jsonServer = require('json-server')\nconst server = jsonServer.create()\nconst router = jsonServer.router('db.json')\nconst middlewares = jsonServer.defaults()\n\nserver.use(middlewares)\nserver.use((req, res, next) => {\n if (isAuthorized(req)) { // add your authorization logic here\n   next() // continue to JSON Server router\n } else {\n   res.sendStatus(401)\n }\n})\nserver.use(router)\nserver.listen(3000, () => {\n  console.log('JSON Server is running')\n})\n```\n#### Custom output example\n\nTo modify responses, overwrite `router.render` method:\n\n```javascript\n// In this example, returned resources will be wrapped in a body property\nrouter.render = (req, res) => {\n  res.jsonp({\n    body: res.locals.data\n  })\n}\n```\n\nYou can set your own status code for the response:\n\n\n```javascript\n// In this example we simulate a server side error response\nrouter.render = (req, res) => {\n  res.status(500).jsonp({\n    error: \"error message here\"\n  })\n}\n```\n\n#### Rewriter example\n\nTo add rewrite rules, use `jsonServer.rewriter()`:\n\n```javascript\n// Add this before server.use(router)\nserver.use(jsonServer.rewriter({\n  '/api/*': '/$1',\n  '/blog/:resource/:id/show': '/:resource/:id'\n}))\n```\n\n#### Mounting JSON Server on another endpoint example\n\nAlternatively, you can also mount the router on `/api`.\n\n```javascript\nserver.use('/api', router)\n```\n\n#### API\n\n__`jsonServer.create()`__\n\nReturns an Express server.\n\n__`jsonServer.defaults([options])`__\n\nReturns middlewares used by JSON Server.\n\n* options\n  * `static` path to static files\n  * `logger` enable logger middleware (default: true)\n  * `bodyParser` enable body-parser middleware (default: true)\n  * `noCors` disable CORS (default: false)\n  * `readOnly` accept only GET requests (default: false)\n\n__`jsonServer.router([path|object])`__\n\nReturns JSON Server router.\n\n### Deployment\n\nYou can deploy JSON Server. For example, [JSONPlaceholder](http://jsonplaceholder.typicode.com) is an online fake API powered by JSON Server and running on Heroku.\n\n## Links\n\n### Video\n\n* [Creating Demo APIs with json-server on egghead.io](https://egghead.io/lessons/nodejs-creating-demo-apis-with-json-server)\n\n### Articles\n\n* [Node Module Of The Week - json-server](http://nmotw.in/json-server/)\n* [Mock up your REST API with JSON Server](http://www.betterpixels.co.uk/projects/2015/05/09/mock-up-your-rest-api-with-json-server/)\n* [ng-admin: Add an AngularJS admin GUI to any RESTful API](http://marmelab.com/blog/2014/09/15/easy-backend-for-your-restful-api.html)\n* [Fast prototyping using Restangular and Json-server](https://glebbahmutov.com/blog/fast-prototyping-restangular-and-json-server/)\n* [Create a Mock REST API in Seconds for Prototyping your Frontend](https://coligo.io/create-mock-rest-api-with-json-server/)\n* [No API? No Problem! Rapid Development via Mock APIs](https://medium.com/@housecor/rapid-development-via-mock-apis-e559087be066#.93d7w8oro)\n* [Zero Code REST With json-server](https://dzone.com/articles/zero-code-rest-with-json-server)\n\n### Third-party tools\n\n* [Grunt JSON Server](https://github.com/tfiwm/grunt-json-server)\n* [Docker JSON Server](https://github.com/clue/docker-json-server)\n* [JSON Server GUI](https://github.com/naholyr/json-server-gui)\n* [JSON file generator](https://github.com/dfsq/json-server-init)\n* [JSON Server extension](https://github.com/maty21/json-server-extension)\n\n## License\n\nMIT\n\n[Supporters](https://thanks.typicode.com) \u2728\n"}, {"repo": "spring-projects/spring-boot", "language": "Java", "readme_contents": "= Spring Boot image:https://ci.spring.io/api/v1/teams/spring-boot/pipelines/spring-boot-2.3.x/jobs/build/badge[\"Build Status\", link=\"https://ci.spring.io/teams/spring-boot/pipelines/spring-boot-2.3.x?groups=Build\"] image:https://badges.gitter.im/Join Chat.svg[\"Chat\",link=\"https://gitter.im/spring-projects/spring-boot?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\"]\n:docs: https://docs.spring.io/spring-boot/docs/current-SNAPSHOT/reference\n:github: https://github.com/spring-projects/spring-boot\n\nSpring Boot makes it easy to create Spring-powered, production-grade applications and\nservices with absolute minimum fuss. It takes an opinionated view of the Spring platform\nso that new and existing users can quickly get to the bits they need.\n\nYou can use Spring Boot to create stand-alone Java applications that can be started using\n`java -jar` or more traditional WAR deployments. We also provide a command line tool\nthat runs spring scripts.\n\nOur primary goals are:\n\n* Provide a radically faster and widely accessible getting started experience for all\nSpring development\n* Be opinionated out of the box, but get out of the way quickly as requirements start to\ndiverge from the defaults\n* Provide a range of non-functional features that are common to large classes of projects\n(e.g. embedded servers, security, metrics, health checks, externalized configuration)\n* Absolutely no code generation and no requirement for XML configuration\n\n\n\n== Installation and Getting Started\nThe {docs}/html/[reference documentation] includes detailed\n{docs}/html/getting-started.html#getting-started-installing-spring-boot[installation\ninstructions] as well as a comprehensive\n{docs}/html/getting-started.html#getting-started-first-application[``getting started``]\nguide.\n\nHere is a quick teaser of a complete Spring Boot application in Java:\n\n[source,java,indent=0]\n----\n\timport org.springframework.boot.*;\n\timport org.springframework.boot.autoconfigure.*;\n\timport org.springframework.web.bind.annotation.*;\n\n\t@RestController\n\t@SpringBootApplication\n\tpublic class Example {\n\n\t\t@RequestMapping(\"/\")\n\t\tString home() {\n\t\t\treturn \"Hello World!\";\n\t\t}\n\n\t\tpublic static void main(String[] args) {\n\t\t\tSpringApplication.run(Example.class, args);\n\t\t}\n\n\t}\n----\n\n\n\n== Getting help\nHaving trouble with Spring Boot? We'd like to help!\n\n* Check the {docs}/html/[reference documentation], especially the\n  {docs}/html/howto.html#howto[How-to's] -- they provide solutions to the most common\n  questions.\n* Learn the Spring basics -- Spring Boot builds on many other Spring projects, check\n  the https://spring.io[spring.io] web-site for a wealth of reference documentation. If\n  you are just starting out with Spring, try one of the https://spring.io/guides[guides].\n* If you are upgrading, read the {github}/wiki[release notes] for upgrade instructions and\n  \"new and noteworthy\" features.\n* Ask a question - we monitor https://stackoverflow.com[stackoverflow.com] for questions\n  tagged with https://stackoverflow.com/tags/spring-boot[`spring-boot`]. You can also chat\n  with the community on https://gitter.im/spring-projects/spring-boot[Gitter].\n* Report bugs with Spring Boot at {github}/issues[github.com/spring-projects/spring-boot/issues].\n\n\n\n== Reporting Issues\nSpring Boot uses GitHub's integrated issue tracking system to record bugs and feature\nrequests. If you want to raise an issue, please follow the recommendations below:\n\n* Before you log a bug, please search the {github}/issues[issue tracker] to see if someone\n  has already reported the problem.\n* If the issue doesn't already exist, {github}/issues/new[create a new issue].\n* Please provide as much information as possible with the issue report, we like to know\n  the version of Spring Boot that you are using, as well as your Operating System and\n  JVM version.\n* If you need to paste code, or include a stack trace use Markdown +++```+++ escapes\n  before and after your text.\n* If possible try to create a test-case or project that replicates the problem and attach\n  it to the issue.\n\n\n\n== Building from Source\nYou don't need to build from source to use Spring Boot (binaries in\nhttps://repo.spring.io[repo.spring.io]), but if you want to try out the latest and\ngreatest, Spring Boot can be easily built with the\nhttps://github.com/takari/maven-wrapper[maven wrapper]. You also need JDK 1.8.\n\n[indent=0]\n----\n\t$ ./mvnw clean install\n----\n\nIf you want to build with the regular `mvn` command, you will need\nhttps://maven.apache.org/run-maven/index.html[Maven v3.5.0 or above].\n\nNOTE: You may need to increase the amount of memory available to Maven by setting\na `MAVEN_OPTS` environment variable with the value `-Xmx512m`. Remember\nto set the corresponding property in your IDE as well if you are building and running\ntests there (e.g. in Eclipse go to `Preferences->Java->Installed JREs` and edit the\nJRE definition so that all processes are launched with those arguments). This property\nis automatically set if you use the maven wrapper.\n\n_Also see link:CONTRIBUTING.adoc[CONTRIBUTING.adoc] if you wish to submit pull requests,\nand in particular please fill out the\nhttps://support.springsource.com/spring_committer_signup[Contributor's Agreement]\nbefore your first change, however trivial._\n\n=== Building reference documentation\n\nFirst of all, make sure you have built the project:\n\n[indent=0]\n----\n\t$ ./mvnw clean install\n----\n\nThe reference documentation requires the documentation of the Maven plugin to be\navailable so you need to build that first since it's not generated by default.\n\n[indent=0]\n----\n\t$ ./mvnw clean install -pl spring-boot-project/spring-boot-tools/spring-boot-maven-plugin -Pdefault,full\n----\n\nThe documentation also includes auto-generated information about the starters. You might\nhave that in your local repository already (per the first step) but if you want to refresh\nit:\n\n[indent=0]\n----\n\t$ ./mvnw clean install -f spring-boot-project/spring-boot-starters\n----\n\nOnce this is done, you can build the reference documentation with the command below:\n\n[indent=0]\n----\n\t$ ./mvnw clean prepare-package -pl spring-boot-project/spring-boot-docs -Pdefault,full\n----\n\nTIP: The generated documentation is available from `spring-boot-project/spring-boot-docs/target/generated-docs/reference/html`\n\n\n== Modules\nThere are a number of modules in Spring Boot, here is a quick overview:\n\n\n\n=== spring-boot\nThe main library providing features that support the other parts of Spring Boot,\nthese include:\n\n* The `SpringApplication` class, providing static convenience methods that make it easy\nto write a stand-alone Spring Application. Its sole job is to create and refresh an\nappropriate Spring `ApplicationContext`\n* Embedded web applications with a choice of container (Tomcat, Jetty or Undertow)\n* First class externalized configuration support\n* Convenience `ApplicationContext` initializers, including support for sensible logging\ndefaults\n\n\n\n=== spring-boot-autoconfigure\nSpring Boot can configure large parts of common applications based on the content\nof their classpath. A single `@EnableAutoConfiguration` annotation triggers\nauto-configuration of the Spring context.\n\nAuto-configuration attempts to deduce which beans a user might need. For example, if\n`HSQLDB` is on the classpath, and the user has not configured any database connections,\nthen they probably want an in-memory database to be defined. Auto-configuration will\nalways back away as the user starts to define their own beans.\n\n\n\n=== spring-boot-starters\nStarters are a set of convenient dependency descriptors that you can include in\nyour application. You get a one-stop-shop for all the Spring and related technology\nthat you need without having to hunt through sample code and copy paste loads of\ndependency descriptors. For example, if you want to get started using Spring and JPA for\ndatabase access just include the `spring-boot-starter-data-jpa` dependency in your\nproject, and you are good to go.\n\n\n\n=== spring-boot-cli\nThe Spring command line application compiles and runs Groovy source, making it super\neasy to write the absolute minimum of code to get an application running. Spring CLI\ncan also watch files, automatically recompiling and restarting when they change.\n\n\n\n=== spring-boot-actuator\nActuator endpoints let you monitor and interact with your application.\nSpring Boot Actuator provides the infrastructure required for actuator endpoints. It contains\nannotation support for actuator endpoints. Out of the box, this module provides a number of endpoints\nincluding the `HealthEndpoint`, `EnvironmentEndpoint`, `BeansEndpoint` and many more.\n\n\n\n=== spring-boot-actuator-autoconfigure\nThis provides auto-configuration for actuator endpoints based on the content of the classpath and a set of properties.\nFor instance, if Micrometer is on the classpath, it will auto-configure the `MetricsEndpoint`.\nIt contains configuration to expose endpoints over HTTP or JMX.\nJust like Spring Boot AutoConfigure, this will back away as the user starts to define their own beans.\n\n\n\n=== spring-boot-test\nThis module contains core items and annotations that can be helpful when testing your application.\n\n\n\n=== spring-boot-test-autoconfigure\nLike other Spring Boot auto-configuration modules, spring-boot-test-autoconfigure, provides auto-configuration\nfor tests based on the classpath. It includes a number of annotations that can be used to automatically\nconfigure a slice of your application that needs to be tested.\n\n\n\n=== spring-boot-loader\nSpring Boot Loader provides the secret sauce that allows you to build a single jar file\nthat can be launched using `java -jar`. Generally you will not need to use\n`spring-boot-loader` directly, but instead work with the\nlink:spring-boot-project/spring-boot-tools/spring-boot-gradle-plugin[Gradle] or\nlink:spring-boot-project/spring-boot-tools/spring-boot-maven-plugin[Maven] plugin.\n\n\n\n=== spring-boot-devtools\nThe spring-boot-devtools module provides additional development-time features such as automatic restarts,\nfor a smoother application development experience. Developer tools are automatically disabled when\nrunning a fully packaged application.\n\n\n\n== Samples\nGroovy samples for use with the command line application are available in\nlink:spring-boot-project/spring-boot-cli/samples[spring-boot-cli/samples]. To run the CLI samples type\n`spring run <sample>.groovy` from samples directory.\n\n\n\n== Guides\nThe https://spring.io/[spring.io] site contains several guides that show how to use Spring\nBoot step-by-step:\n\n* https://spring.io/guides/gs/spring-boot/[Building an Application with Spring Boot] is a\n  very basic guide that shows you how to create a simple application, run it and add some\n  management services.\n* https://spring.io/guides/gs/actuator-service/[Building a RESTful Web Service with Spring\n  Boot Actuator] is a guide to creating a REST web service and also shows how the server\n  can be configured.\n* https://spring.io/guides/gs/convert-jar-to-war/[Converting a Spring Boot JAR Application\n  to a WAR] shows you how to run applications in a web server as a WAR file.\n\n\n\n== License\nSpring Boot is Open Source software released under the\nhttps://www.apache.org/licenses/LICENSE-2.0.html[Apache 2.0 license].\n"}, {"repo": "storybookjs/storybook", "language": "TypeScript", "readme_contents": "<p align=\"center\">\n  <a href=\"https://storybook.js.org/\">\n    <img src=\"https://user-images.githubusercontent.com/321738/63501763-88dbf600-c4cc-11e9-96cd-94adadc2fd72.png\" alt=\"Storybook\" width=\"400\" />\n  </a>\n</p>\n\n<p align=\"center\">Build bulletproof UI components faster</p>\n\n<br/>\n\n<p align=\"center\">\n  <a href=\"https://circleci.com/gh/storybookjs/storybook\">\n    <img src=\"https://circleci.com/gh/storybookjs/storybook.svg?style=shield\" alt=\"Build Status on CircleCI\" />\n  </a>\n  <a href=\"https://www.codefactor.io/repository/github/storybookjs/storybook\">\n    <img src=\"https://www.codefactor.io/repository/github/storybookjs/storybook/badge\" alt=\"CodeFactor\" />\n  </a>\n  <a href=\"https://snyk.io/test/github/storybookjs/storybook\">\n    <img src=\"https://snyk.io/test/github/storybookjs/storybook/badge.svg\" alt=\"Known Vulnerabilities\" />\n  </a>\n  <a href=\"https://codecov.io/gh/storybookjs/storybook\">\n    <img src=\"https://codecov.io/gh/storybookjs/storybook/branch/master/graph/badge.svg\" alt=\"codecov\" />\n  </a>\n  <a href=\"https://github.com/storybookjs/storybook/blob/master/LICENSE\">\n    <img src=\"https://img.shields.io/github/license/storybookjs/storybook.svg\" alt=\"License\" />\n  </a>\n  <br/>\n  <a href=\"https://discord.gg/sMFvFsG\">\n    <img src=\"https://img.shields.io/badge/discord-join-7289DA.svg?logo=discord&longCache=true&style=flat\" />\n  </a>\n  <a href=\"https://now-examples-slackin-rrirkqohko.now.sh/\">\n    <img src=\"https://now-examples-slackin-rrirkqohko.now.sh/badge.svg?logo=slack\" alt=\"Storybook Slack\" />\n  </a>\n  <a href=\"#backers\">\n    <img src=\"https://opencollective.com/storybook/backers/badge.svg\" alt=\"Backers on Open Collective\" />\n  </a>\n  <a href=\"#sponsors\">\n    <img src=\"https://opencollective.com/storybook/sponsors/badge.svg\" alt=\"Sponsors on Open Collective\" />\n  </a>\n  <a href=\"https://twitter.com/intent/follow?screen_name=storybookjs\">\n    <img src=\"https://badgen.net/twitter/follow/storybookjs?icon=twitter&label=%40storybookjs\" alt=\"Official Twitter Handle\" />\n  </a>\n</p>\n\nStorybook is a development environment for UI components.\nIt allows you to browse a component library, view the different states of each component, and interactively develop and test components.\n\n<center>\n  <img src=\"media/storybook-intro.gif\" width=\"100%\" />\n</center>\n\n<p align=\"center\">\n  View README for:<br/>\n  <a href=\"https://github.com/storybookjs/storybook/blob/master/README.md\" title=\"latest\"><img alt=\"latest\" src=\"https://img.shields.io/npm/v/@storybook/core/latest.svg\" /></a>\n  <a href=\"https://github.com/storybookjs/storybook/blob/next/README.md\" title=\"next\"><img alt=\"next\" src=\"https://img.shields.io/npm/v/@storybook/core/next.svg\" /></a>\n</p>\n\n## Intro\n\nStorybook runs outside of your app. This allows you to develop UI components in isolation, which can improve component reuse, testability, and development speed. You can build quickly without having to worry about application-specific dependencies.\n\nHere are some featured examples that you can reference to see how Storybook works: <https://storybook.js.org/examples/>\n\nStorybook comes with a lot of [addons](https://storybook.js.org/addons/introduction/) for component design, documentation, testing, interactivity, and so on. Storybook's API makes it possible to configure and extend in various ways. It has even been extended to support React Native development for mobile.\n\n## Table of contents\n\n- \ud83d\ude80[Getting Started](#getting-started)\n- \ud83d\udcd2[Projects](#projects)\n  - \ud83d\udee0[Supported Frameworks & Examples](#supported-frameworks)\n  - \ud83d\ude87[Sub Projects](#sub-projects)\n  - \ud83d\udd17[Addons](#addons)\n- \ud83c\udfc5[Badges & Presentation materials](#badges--presentation-materials)\n- \ud83d\udc65[Community](#community)\n- \ud83d\udc4f[Contributing](#contributing)\n  - \ud83d\udc68\u200d\ud83d\udcbb[Development scripts](#development-scripts)\n  - \ud83d\udcb5[Backers](#backers)\n  - \ud83d\udcb8[Sponsors](#sponsors)\n- :memo:[License](#license)\n\n## Getting Started\n\nFirst install storybook:\n\n```sh\ncd my-react-app\nnpx -p @storybook/cli sb init\n```\n\nIf you'd rather set up your project manually, take a look at our [Slow Start Guide](https://storybook.js.org/basics/slow-start-guide/).\n\nOnce it's installed, you can `npm run storybook` and it will run the development server on your local machine, and give you a URL to browse some sample stories.\n\n**Storybook v2.x migration note**: \nIf you're using Storybook v2.x and want to shift to 4.x version the easiest way is:\n\n```sh\ncd my-storybook-v2-app\nnpx -p @storybook/cli sb init\n```\n\nIt runs a codemod to update all package names. Read all migration details in our [Migration Guide](MIGRATION.md)\n\nFor full documentation on using Storybook visit: [storybook.js.org](https://storybook.js.org)\n\nFor additional help, join us [in our Discord](https://discord.gg/sMFvFsG) or [Slack](https://now-examples-slackin-rrirkqohko.now.sh/)\n\n## Projects\n\n### Supported Frameworks\n\n| Framework                        | Demo                                              |                                                                                                |\n| -------------------------------- | ------------------------------------------------- | ---------------------------------------------------------------------------------------------- |\n| [React](app/react)               | [v5.1.0](https://storybooks-official.netlify.com) | [![React](https://img.shields.io/npm/dm/@storybook/react.svg)](app/react)                      |\n| [React Native](app/react-native) | -                                                 | [![React Native](https://img.shields.io/npm/dm/@storybook/react-native.svg)](app/react-native) |\n| [Vue](app/vue)                   | [v5.1.0](https://storybooks-vue.netlify.com/)     | [![Vue](https://img.shields.io/npm/dm/@storybook/vue.svg)](app/vue)                            |\n| [Angular](app/angular)           | [v5.1.0](https://storybooks-angular.netlify.com/) | [![Angular](https://img.shields.io/npm/dm/@storybook/angular.svg)](app/angular)                |\n| [Polymer](app/polymer)           | [v5.1.0](https://storybooks-polymer.netlify.com/) | [![Polymer](https://img.shields.io/npm/dm/@storybook/polymer.svg)](app/polymer)                |\n| [Mithril](app/mithril)           | [v5.1.0](https://storybooks-mithril.netlify.com/) | [![Mithril](https://img.shields.io/npm/dm/@storybook/mithril.svg)](app/mithril)                |\n| [Marko](app/marko)               | [v5.1.0](https://storybooks-marko.netlify.com/)   | [![Marko](https://img.shields.io/npm/dm/@storybook/marko.svg)](app/marko)                      |\n| [HTML](app/html)                 | [v5.1.0](https://storybooks-html.netlify.com/)    | [![HTML](https://img.shields.io/npm/dm/@storybook/html.svg)](app/html)                         |\n| [Svelte](app/svelte)             | [v5.1.0](https://storybooks-svelte.netlify.com/)  | [![Svelte](https://img.shields.io/npm/dm/@storybook/svelte.svg)](app/svelte)                   |\n| [Riot](app/riot)                 | [v5.1.0](https://storybooks-riot.netlify.com/)    | [![Riot](https://img.shields.io/npm/dm/@storybook/riot.svg)](app/riot)                         |\n| [Ember](app/ember)               | [v5.1.0](https://storybooks-ember.netlify.com/)   | [![Ember](https://img.shields.io/npm/dm/@storybook/ember.svg)](app/ember)                      |\n| [Preact](app/preact)             | [v5.1.0](https://storybooks-preact.netlify.com/)  | [![Preact](https://img.shields.io/npm/dm/@storybook/preact.svg)](app/preact)                   |\n\n### Sub Projects\n\n- [CLI](lib/cli) - Streamlined installation for a variety of app types\n- [examples](examples) - Code examples to illustrate different Storybook use cases\n\n### Addons\n\n| Addons                                      |                                                                            |\n| ------------------------------------------- | -------------------------------------------------------------------------- |\n| [a11y](addons/a11y/)                        | Test components for user accessibility in Storybook                        |\n| [actions](addons/actions/)                  | Log actions as users interact with components in the Storybook UI          |\n| [backgrounds](addons/backgrounds/)          | Let users choose backgrounds in the Storybook UI                           |\n| [centered](addons/centered/)                | Center the alignment of your components within the Storybook UI            |\n| [contexts](addons/contexts/)                | Interactively inject component contexts for stories in the Storybook UI    |\n| [cssresources](addons/cssresources/)        | Dynamically add/remove css resources to the component iframe               |\n| [design assets](addons/design-assets/)      | View images, videos, weblinks alongside your story                         |\n| [events](addons/events/)                    | Interactively fire events to components that respond to EventEmitter       |\n| [graphql](addons/graphql/)                  | Query a GraphQL server within Storybook stories                            |\n| [google-analytics](addons/google-analytics) | Reports google analytics on stories                                        |\n| [info](addons/info/)                        | Annotate stories with extra component usage information                    |\n| [jest](addons/jest/)                        | View the results of components' unit tests in Storybook                    |\n| [knobs](addons/knobs/)                      | Interactively edit component prop data in the Storybook UI                 |\n| [links](addons/links/)                      | Create links between stories                                               |\n| [notes](addons/notes/)                      | Annotate Storybook stories with notes                                      |\n| [options](addons/options/)                  | Customize the Storybook UI in code                                         |\n| [storyshots](addons/storyshots/)            | Snapshot testing for components in Storybook                               |\n| [storysource](addons/storysource/)          | View the code of your stories within the Storybook UI                      |\n| [viewport](addons/viewport/)                | Change display sizes and layouts for responsive components using Storybook |\n\nSee [Addon / Framework Support Table](ADDONS_SUPPORT.md)\n\n## Badges & Presentation materials\n\nWe have a badge! Link it to your live Storybook example.\n\n![Storybook](https://cdn.jsdelivr.net/gh/storybookjs/brand@master/badge/badge-storybook.svg)\n\n```md\n[![Storybook](https://cdn.jsdelivr.net/gh/storybookjs/brand@master/badge/badge-storybook.svg)](link to site)\n```\n\nIf you're looking for material to use in your presentation about storybook, like logo's video material and the colors we use etc, you can find all of that at our [brand repo](https://github.com/storybookjs/brand).\n\n## Community\n\n- Tweeting via [@storybookjs](https://twitter.com/storybookjs)\n- Blogging at [Medium](https://medium.com/storybookjs)\n- Chatting on [Slack](https://now-examples-slackin-rrirkqohko.now.sh/)\n- Discussions on [Discord](https://discord.gg/sMFvFsG)\n- Streaming saved at [Youtube](https://www.youtube.com/channel/UCr7Quur3eIyA_oe8FNYexfg)\n\n## Contributing\n\nWe welcome contributions to Storybook!\n\n- \ud83d\udce5 Pull requests and \ud83c\udf1f Stars are always welcome.\n- Read our [contributing guide](CONTRIBUTING.md) to get started.\n  or find us on [Discord](https://discord.gg/sMFvFsG), we're will take the time to guide you\n\nLooking for a first issue to tackle?\n\n- We tag issues with [![Good First Issue](https://img.shields.io/github/issues/storybookjs/storybook/good%20first%20issue.svg)](https://github.com/storybookjs/storybook/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22) when we think they are well suited for people who are new to the codebase or OSS in general.\n- [Talk to us](https://discord.gg/sMFvFsG), we'll find something to suits your skills and learning interest.\n\n### Development scripts\n\nStorybook is organized as a monorepo using [Lerna](https://lerna.js.org/). Useful scripts include:\n\n#### `yarn bootstrap`\n\n> Installs package dependencies and links packages together - using lerna\n\n#### `yarn run publish`\n\n> Push a release to git and npm\n> will ask for version in interactive mode - using lerna.\n\n#### `yarn lint`\n\n> boolean check if code conforms to linting rules - uses remark & eslint\n\n- `yarn lint:js` - will check js\n- `yarn lint:md` - will check markdown + code samples\n\n- `yarn lint:js --fix` - will automatically fix js\n\n#### `yarn test`\n\n> boolean check if unit tests all pass - uses jest\n\n- `yarn run test --core --watch` - will run core tests in watch-mode\n\n### Sponsors\n\nBecome a sponsor and get your logo on our README on Github with a link to your site. \\[[Become a sponsor](https://opencollective.com/storybook#sponsor)]\n\n<a href=\"https://opencollective.com/storybook/sponsor/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/storybook/sponsor/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/storybook/sponsor/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/storybook/sponsor/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/storybook/sponsor/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/storybook/sponsor/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/storybook/sponsor/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/storybook/sponsor/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/storybook/sponsor/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/storybook/sponsor/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/storybook/sponsor/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/storybook/sponsor/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/storybook/sponsor/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/storybook/sponsor/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/storybook/sponsor/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/storybook/sponsor/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/storybook/sponsor/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/storybook/sponsor/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/storybook/sponsor/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/storybook/sponsor/9/avatar.svg\"></a>\n<a href=\"https://opencollective.com/storybook/sponsor/10/website\" target=\"_blank\"><img src=\"https://opencollective.com/storybook/sponsor/10/avatar.svg\"></a>\n<a href=\"https://opencollective.com/storybook/sponsor/11/website\" target=\"_blank\"><img src=\"https://opencollective.com/storybook/sponsor/11/avatar.svg\"></a>\n<a href=\"https://opencollective.com/storybook/sponsor/12/website\" target=\"_blank\"><img src=\"https://opencollective.com/storybook/sponsor/12/avatar.svg\"></a>\n<a href=\"https://opencollective.com/storybook/sponsor/13/website\" target=\"_blank\"><img src=\"https://opencollective.com/storybook/sponsor/13/avatar.svg\"></a>\n<a href=\"https://opencollective.com/storybook/sponsor/14/website\" target=\"_blank\"><img src=\"https://opencollective.com/storybook/sponsor/14/avatar.svg\"></a>\n<a href=\"https://opencollective.com/storybook/sponsor/15/website\" target=\"_blank\"><img src=\"https://opencollective.com/storybook/sponsor/15/avatar.svg\"></a>\n<a href=\"https://opencollective.com/storybook/sponsor/16/website\" target=\"_blank\"><img src=\"https://opencollective.com/storybook/sponsor/16/avatar.svg\"></a>\n<a href=\"https://opencollective.com/storybook/sponsor/17/website\" target=\"_blank\"><img src=\"https://opencollective.com/storybook/sponsor/17/avatar.svg\"></a>\n<a href=\"https://opencollective.com/storybook/sponsor/18/website\" target=\"_blank\"><img src=\"https://opencollective.com/storybook/sponsor/18/avatar.svg\"></a>\n<a href=\"https://opencollective.com/storybook/sponsor/19/website\" target=\"_blank\"><img src=\"https://opencollective.com/storybook/sponsor/19/avatar.svg\"></a>\n<a href=\"https://opencollective.com/storybook/sponsor/20/website\" target=\"_blank\"><img src=\"https://opencollective.com/storybook/sponsor/20/avatar.svg\"></a>\n<a href=\"https://opencollective.com/storybook/sponsor/21/website\" target=\"_blank\"><img src=\"https://opencollective.com/storybook/sponsor/21/avatar.svg\"></a>\n<a href=\"https://opencollective.com/storybook/sponsor/22/website\" target=\"_blank\"><img src=\"https://opencollective.com/storybook/sponsor/22/avatar.svg\"></a>\n<a href=\"https://opencollective.com/storybook/sponsor/23/website\" target=\"_blank\"><img src=\"https://opencollective.com/storybook/sponsor/23/avatar.svg\"></a>\n<a href=\"https://opencollective.com/storybook/sponsor/24/website\" target=\"_blank\"><img src=\"https://opencollective.com/storybook/sponsor/24/avatar.svg\"></a>\n<a href=\"https://opencollective.com/storybook/sponsor/25/website\" target=\"_blank\"><img src=\"https://opencollective.com/storybook/sponsor/25/avatar.svg\"></a>\n<a href=\"https://opencollective.com/storybook/sponsor/26/website\" target=\"_blank\"><img src=\"https://opencollective.com/storybook/sponsor/26/avatar.svg\"></a>\n<a href=\"https://opencollective.com/storybook/sponsor/27/website\" target=\"_blank\"><img src=\"https://opencollective.com/storybook/sponsor/27/avatar.svg\"></a>\n<a href=\"https://opencollective.com/storybook/sponsor/28/website\" target=\"_blank\"><img src=\"https://opencollective.com/storybook/sponsor/28/avatar.svg\"></a>\n<a href=\"https://opencollective.com/storybook/sponsor/29/website\" target=\"_blank\"><img src=\"https://opencollective.com/storybook/sponsor/29/avatar.svg\"></a>\n\n### Backers\n\nSupport us with a monthly donation and help us continue our activities. \\[[Become a backer](https://opencollective.com/storybook#backer)]\n\n<a href=\"https://opencollective.com/storybook/backer/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/storybook/backer/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/storybook/backer/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/storybook/backer/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/storybook/backer/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/storybook/backer/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/storybook/backer/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/storybook/backer/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/storybook/backer/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/storybook/backer/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/storybook/backer/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/storybook/backer/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/storybook/backer/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/storybook/backer/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/storybook/backer/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/storybook/backer/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/storybook/backer/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/storybook/backer/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/storybook/backer/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/storybook/backer/9/avatar.svg\"></a>\n<a href=\"https://opencollective.com/storybook/backer/10/website\" target=\"_blank\"><img src=\"https://opencollective.com/storybook/backer/10/avatar.svg\"></a>\n<a href=\"https://opencollective.com/storybook/backer/11/website\" target=\"_blank\"><img src=\"https://opencollective.com/storybook/backer/11/avatar.svg\"></a>\n<a href=\"https://opencollective.com/storybook/backer/12/website\" target=\"_blank\"><img src=\"https://opencollective.com/storybook/backer/12/avatar.svg\"></a>\n<a href=\"https://opencollective.com/storybook/backer/13/website\" target=\"_blank\"><img src=\"https://opencollective.com/storybook/backer/13/avatar.svg\"></a>\n<a href=\"https://opencollective.com/storybook/backer/14/website\" target=\"_blank\"><img src=\"https://opencollective.com/storybook/backer/14/avatar.svg\"></a>\n<a href=\"https://opencollective.com/storybook/backer/15/website\" target=\"_blank\"><img src=\"https://opencollective.com/storybook/backer/15/avatar.svg\"></a>\n<a href=\"https://opencollective.com/storybook/backer/16/website\" target=\"_blank\"><img src=\"https://opencollective.com/storybook/backer/16/avatar.svg\"></a>\n<a href=\"https://opencollective.com/storybook/backer/17/website\" target=\"_blank\"><img src=\"https://opencollective.com/storybook/backer/17/avatar.svg\"></a>\n<a href=\"https://opencollective.com/storybook/backer/18/website\" target=\"_blank\"><img src=\"https://opencollective.com/storybook/backer/18/avatar.svg\"></a>\n<a href=\"https://opencollective.com/storybook/backer/19/website\" target=\"_blank\"><img src=\"https://opencollective.com/storybook/backer/19/avatar.svg\"></a>\n<a href=\"https://opencollective.com/storybook/backer/20/website\" target=\"_blank\"><img src=\"https://opencollective.com/storybook/backer/20/avatar.svg\"></a>\n<a href=\"https://opencollective.com/storybook/backer/21/website\" target=\"_blank\"><img src=\"https://opencollective.com/storybook/backer/21/avatar.svg\"></a>\n<a href=\"https://opencollective.com/storybook/backer/22/website\" target=\"_blank\"><img src=\"https://opencollective.com/storybook/backer/22/avatar.svg\"></a>\n<a href=\"https://opencollective.com/storybook/backer/23/website\" target=\"_blank\"><img src=\"https://opencollective.com/storybook/backer/23/avatar.svg\"></a>\n<a href=\"https://opencollective.com/storybook/backer/24/website\" target=\"_blank\"><img src=\"https://opencollective.com/storybook/backer/24/avatar.svg\"></a>\n<a href=\"https://opencollective.com/storybook/backer/25/website\" target=\"_blank\"><img src=\"https://opencollective.com/storybook/backer/25/avatar.svg\"></a>\n<a href=\"https://opencollective.com/storybook/backer/26/website\" target=\"_blank\"><img src=\"https://opencollective.com/storybook/backer/26/avatar.svg\"></a>\n<a href=\"https://opencollective.com/storybook/backer/27/website\" target=\"_blank\"><img src=\"https://opencollective.com/storybook/backer/27/avatar.svg\"></a>\n<a href=\"https://opencollective.com/storybook/backer/28/website\" target=\"_blank\"><img src=\"https://opencollective.com/storybook/backer/28/avatar.svg\"></a>\n<a href=\"https://opencollective.com/storybook/backer/29/website\" target=\"_blank\"><img src=\"https://opencollective.com/storybook/backer/29/avatar.svg\"></a>\n\n## License\n\n[MIT](https://github.com/storybookjs/storybook/blob/master/LICENSE)\n\n-the end-\n"}, {"repo": "h5bp/html5-boilerplate", "language": "JavaScript", "readme_contents": "# [HTML5 Boilerplate](https://html5boilerplate.com/)\n\n[![LICENSE](https://img.shields.io/badge/license-MIT-lightgrey.svg)](https://github.com/h5bp/html5-boilerplate/blob/master/LICENSE.txt)\n[![Build Status](https://travis-ci.org/h5bp/html5-boilerplate.svg)](https://travis-ci.org/h5bp/html5-boilerplate)\n[![devDependency Status](https://david-dm.org/h5bp/html5-boilerplate/dev-status.svg)](https://david-dm.org/h5bp/html5-boilerplate#info=devDependencies)\n[![NPM Downloads](https://img.shields.io/npm/dt/html5-boilerplate.svg)](https://www.npmjs.com/package/html5-boilerplate)\n[![github-stars-image](https://img.shields.io/github/stars/h5bp/html5-boilerplate.svg?label=github%20stars)](https://github.com/h5bp/html5-boilerplate)\n\nHTML5 Boilerplate is a professional front-end template for building\nfast, robust, and adaptable web apps or sites.\n\nThis project is the product of years of iterative development and\ncommunity knowledge. It does not impose a specific development\nphilosophy or framework, so you're free to architect your code in the\nway that you want.\n\n* Homepage: [https://html5boilerplate.com/](https://html5boilerplate.com/)\n* Source: [https://github.com/h5bp/html5-boilerplate](https://github.com/h5bp/html5-boilerplate)\n* Twitter: [@h5bp](https://twitter.com/h5bp)\n\n\n## Quick start\n\nChoose one of the following options:\n\n* Download the latest stable release from\n  [html5boilerplate.com](https://html5boilerplate.com/). This zip file is a snapshot of the `dist` folder. On Windows, Mac and from the file manager on Linux unzipping this folder will output to a folder named something like `html5-boilerplate_v7.3.0`. From the command line will need to create a folder and unzip the contents into that folder.\n\n  ```bash\n  mkdir html5-boilerplate\n  unzip html5-boilerplate*.zip -d html5-boilerplate\n  ```\n\n* Clone the git repo \u2014 `git clone\n  https://github.com/h5bp/html5-boilerplate.git` - and checkout the\n  [tagged release](https://github.com/h5bp/html5-boilerplate/releases)\n  you'd like to use. The `dist` folder represents the latest version of the project for end users. \n* Install with [npm](https://www.npmjs.com/): `npm install html5-boilerplate` or [yarn](https://yarnpkg.com/): `yarn add html5-boilerplate`. The resulting `node_modules/html5-boilerplate/dist` folder represents the latest version of the project for end users. Depending on what you want to use and how you want to use it, you may have to copy and paste the contents of that folder into your project directory.\n\n## Features\n\n* HTML5 ready. Use the new elements with confidence.\n* Designed with progressive enhancement in mind.\n* Includes:\n  * [`Normalize.css`](https://necolas.github.com/normalize.css/)\n    for CSS normalizations and common bug fixes\n  * [`jQuery`](https://jquery.com/) via CDN with [SRI Hash](https://developer.mozilla.org/en-US/docs/Web/Security/Subresource_Integrity) and a local fallback\n  * A custom build of [`Modernizr`](https://modernizr.com/) for feature\n    detection\n  * [`Apache Server Configs`](https://github.com/h5bp/server-configs-apache)\n    that, among other, improve the web site's performance and security\n* Placeholder CSS Media Queries.\n* Useful CSS helper classes.\n* Default print styles, performance optimized.\n* An optimized version of the Google Universal Analytics snippet.\n* Protection against any stray `console` statements causing JavaScript\n  errors in older browsers.\n* \"Delete-key friendly.\" Easy to strip out parts you don't need.\n* Extensive inline and accompanying documentation.\n\n\n## Browser support\n\n* Chrome *(latest 2)*\n* Edge *(latest 2)*\n* Firefox *(latest 2)*\n* Internet Explorer 11\n* Opera *(latest 2)*\n* Safari *(latest 2)*\n\n*This doesn't mean that HTML5 Boilerplate cannot be used in older browsers,\njust that we'll ensure compatibility with the ones mentioned above.*\n\nIf you need legacy browser support you can use [HTML5 Boilerplate v6](https://github.com/h5bp/html5-boilerplate/releases/tag/6.1.0) (IE9/IE10)\nor [HTML5 Boilerplate v5](https://github.com/h5bp/html5-boilerplate/releases/tag/5.3.0) (IE 8). They are no longer actively developed.\n\n## Documentation\n\nTake a look at the [documentation table of contents](dist/doc/TOC.md).\nThis documentation is bundled with the project which makes it \navailable for offline reading and provides a useful starting point for\nany documentation you want to write about your project.\n\n## Contributing\n\nHundreds of developers have helped to make the HTML5 Boilerplate. Anyone is welcome to [contribute](.github/CONTRIBUTING.md),\nhowever, if you decide to get involved, please take a moment to review\nthe [guidelines](.github/CONTRIBUTING.md):\n\n* [Bug reports](.github/CONTRIBUTING.md#bugs)\n* [Feature requests](.github/CONTRIBUTING.md#features)\n* [Pull requests](.github/CONTRIBUTING.md#pull-requests)\n\n## License\n\nThe code is available under the [MIT license](LICENSE.txt).\n"}]